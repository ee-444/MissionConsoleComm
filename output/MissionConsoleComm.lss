
MissionConsoleComm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  00000df2  00000e86  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000df2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800134  00800134  00000eba  2**0
                  ALLOC
  3 .stab         00000cf0  00000000  00000000  00000ebc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000218  00000000  00000000  00001bac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000e8  00000000  00000000  00001dc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000034c  00000000  00000000  00001eac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000f5f  00000000  00000000  000021f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000078b  00000000  00000000  00003157  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001179  00000000  00000000  000038e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001c0  00000000  00000000  00004a5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000005de  00000000  00000000  00004c1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000096e  00000000  00000000  000051fa  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000098  00000000  00000000  00005b68  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 36 00 	jmp	0x6c	; 0x6c <__dtors_end>
   4:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
   8:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
   c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  10:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  14:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  18:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  1c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  20:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  24:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  28:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  2c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  30:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  34:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  38:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  3c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  40:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  44:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  48:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  4c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  50:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  54:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  58:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  5c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  60:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  64:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>

00000068 <__ctors_start>:
  68:	ed 00       	.word	0x00ed	; ????

0000006a <__ctors_end>:
  6a:	fa 00       	.word	0x00fa	; ????

0000006c <__dtors_end>:
  6c:	11 24       	eor	r1, r1
  6e:	1f be       	out	0x3f, r1	; 63
  70:	cf ef       	ldi	r28, 0xFF	; 255
  72:	d8 e0       	ldi	r29, 0x08	; 8
  74:	de bf       	out	0x3e, r29	; 62
  76:	cd bf       	out	0x3d, r28	; 61

00000078 <__do_copy_data>:
  78:	11 e0       	ldi	r17, 0x01	; 1
  7a:	a0 e0       	ldi	r26, 0x00	; 0
  7c:	b1 e0       	ldi	r27, 0x01	; 1
  7e:	e2 ef       	ldi	r30, 0xF2	; 242
  80:	fd e0       	ldi	r31, 0x0D	; 13
  82:	02 c0       	rjmp	.+4      	; 0x88 <__do_copy_data+0x10>
  84:	05 90       	lpm	r0, Z+
  86:	0d 92       	st	X+, r0
  88:	a4 33       	cpi	r26, 0x34	; 52
  8a:	b1 07       	cpc	r27, r17
  8c:	d9 f7       	brne	.-10     	; 0x84 <__do_copy_data+0xc>

0000008e <__do_clear_bss>:
  8e:	11 e0       	ldi	r17, 0x01	; 1
  90:	a4 e3       	ldi	r26, 0x34	; 52
  92:	b1 e0       	ldi	r27, 0x01	; 1
  94:	01 c0       	rjmp	.+2      	; 0x98 <.do_clear_bss_start>

00000096 <.do_clear_bss_loop>:
  96:	1d 92       	st	X+, r1

00000098 <.do_clear_bss_start>:
  98:	a9 33       	cpi	r26, 0x39	; 57
  9a:	b1 07       	cpc	r27, r17
  9c:	e1 f7       	brne	.-8      	; 0x96 <.do_clear_bss_loop>

0000009e <__do_global_ctors>:
  9e:	10 e0       	ldi	r17, 0x00	; 0
  a0:	ca e6       	ldi	r28, 0x6A	; 106
  a2:	d0 e0       	ldi	r29, 0x00	; 0
  a4:	04 c0       	rjmp	.+8      	; 0xae <__do_global_ctors+0x10>
  a6:	22 97       	sbiw	r28, 0x02	; 2
  a8:	fe 01       	movw	r30, r28
  aa:	0e 94 b0 02 	call	0x560	; 0x560 <__tablejump__>
  ae:	c8 36       	cpi	r28, 0x68	; 104
  b0:	d1 07       	cpc	r29, r17
  b2:	c9 f7       	brne	.-14     	; 0xa6 <__do_global_ctors+0x8>
  b4:	0e 94 60 00 	call	0xc0	; 0xc0 <main>
  b8:	0c 94 ec 06 	jmp	0xdd8	; 0xdd8 <__do_global_dtors>

000000bc <__bad_interrupt>:
  bc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c0 <main>:

// declare the mission console object
ArduinoLibrary::Cmissionconsole mission_console;

int main (void)
{
  c0:	df 93       	push	r29
  c2:	cf 93       	push	r28
  c4:	00 d0       	rcall	.+0      	; 0xc6 <main+0x6>
  c6:	00 d0       	rcall	.+0      	; 0xc8 <main+0x8>
  c8:	00 d0       	rcall	.+0      	; 0xca <main+0xa>
  ca:	cd b7       	in	r28, 0x3d	; 61
  cc:	de b7       	in	r29, 0x3e	; 62
	// varialbes for temporary testing 
	// of the data packets
	uint8_t inc_tx = 1;
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	8e 83       	std	Y+6, r24	; 0x06
	uint8_t tx_cnt = 0;
  d2:	1d 82       	std	Y+5, r1	; 0x05

	// Allow commumication throught the defined channel
	mission_console.enable();
  d4:	84 e3       	ldi	r24, 0x34	; 52
  d6:	91 e0       	ldi	r25, 0x01	; 1
  d8:	0e 94 4f 01 	call	0x29e	; 0x29e <_ZN14ArduinoLibrary15Cmissionconsole6enableEv>
	
	while(1){

		// delay for some time
		for (uint32_t i=0; i<110000; i++){
  dc:	19 82       	std	Y+1, r1	; 0x01
  de:	1a 82       	std	Y+2, r1	; 0x02
  e0:	1b 82       	std	Y+3, r1	; 0x03
  e2:	1c 82       	std	Y+4, r1	; 0x04
  e4:	16 c0       	rjmp	.+44     	; 0x112 <main+0x52>
			i += 2;
  e6:	89 81       	ldd	r24, Y+1	; 0x01
  e8:	9a 81       	ldd	r25, Y+2	; 0x02
  ea:	ab 81       	ldd	r26, Y+3	; 0x03
  ec:	bc 81       	ldd	r27, Y+4	; 0x04
  ee:	02 96       	adiw	r24, 0x02	; 2
  f0:	a1 1d       	adc	r26, r1
  f2:	b1 1d       	adc	r27, r1
  f4:	89 83       	std	Y+1, r24	; 0x01
  f6:	9a 83       	std	Y+2, r25	; 0x02
  f8:	ab 83       	std	Y+3, r26	; 0x03
  fa:	bc 83       	std	Y+4, r27	; 0x04
	mission_console.enable();
	
	while(1){

		// delay for some time
		for (uint32_t i=0; i<110000; i++){
  fc:	89 81       	ldd	r24, Y+1	; 0x01
  fe:	9a 81       	ldd	r25, Y+2	; 0x02
 100:	ab 81       	ldd	r26, Y+3	; 0x03
 102:	bc 81       	ldd	r27, Y+4	; 0x04
 104:	01 96       	adiw	r24, 0x01	; 1
 106:	a1 1d       	adc	r26, r1
 108:	b1 1d       	adc	r27, r1
 10a:	89 83       	std	Y+1, r24	; 0x01
 10c:	9a 83       	std	Y+2, r25	; 0x02
 10e:	ab 83       	std	Y+3, r26	; 0x03
 110:	bc 83       	std	Y+4, r27	; 0x04
 112:	20 e0       	ldi	r18, 0x00	; 0
 114:	89 81       	ldd	r24, Y+1	; 0x01
 116:	9a 81       	ldd	r25, Y+2	; 0x02
 118:	ab 81       	ldd	r26, Y+3	; 0x03
 11a:	bc 81       	ldd	r27, Y+4	; 0x04
 11c:	80 3b       	cpi	r24, 0xB0	; 176
 11e:	3d ea       	ldi	r19, 0xAD	; 173
 120:	93 07       	cpc	r25, r19
 122:	31 e0       	ldi	r19, 0x01	; 1
 124:	a3 07       	cpc	r26, r19
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	b3 07       	cpc	r27, r19
 12a:	08 f4       	brcc	.+2      	; 0x12e <main+0x6e>
 12c:	21 e0       	ldi	r18, 0x01	; 1
 12e:	22 23       	and	r18, r18
 130:	d1 f6       	brne	.-76     	; 0xe6 <main+0x26>
			i += 2;
		}

		// send data to the console
		mission_console.longRangeIR(inc_tx++);
 132:	8e 81       	ldd	r24, Y+6	; 0x06
 134:	28 2f       	mov	r18, r24
 136:	30 e0       	ldi	r19, 0x00	; 0
 138:	8e 81       	ldd	r24, Y+6	; 0x06
 13a:	8f 5f       	subi	r24, 0xFF	; 255
 13c:	8e 83       	std	Y+6, r24	; 0x06
 13e:	84 e3       	ldi	r24, 0x34	; 52
 140:	91 e0       	ldi	r25, 0x01	; 1
 142:	b9 01       	movw	r22, r18
 144:	0e 94 08 02 	call	0x410	; 0x410 <_ZN14ArduinoLibrary15Cmissionconsole11longRangeIREj>
		mission_console.mediumRangeIR(0xff-inc_tx);
 148:	8e 81       	ldd	r24, Y+6	; 0x06
 14a:	88 2f       	mov	r24, r24
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	2f ef       	ldi	r18, 0xFF	; 255
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	a9 01       	movw	r20, r18
 154:	48 1b       	sub	r20, r24
 156:	59 0b       	sbc	r21, r25
 158:	ca 01       	movw	r24, r20
 15a:	9c 01       	movw	r18, r24
 15c:	84 e3       	ldi	r24, 0x34	; 52
 15e:	91 e0       	ldi	r25, 0x01	; 1
 160:	b9 01       	movw	r22, r18
 162:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <_ZN14ArduinoLibrary15Cmissionconsole13mediumRangeIREj>
		mission_console.adValue(inc_tx);
 166:	8e 81       	ldd	r24, Y+6	; 0x06
 168:	28 2f       	mov	r18, r24
 16a:	30 e0       	ldi	r19, 0x00	; 0
 16c:	84 e3       	ldi	r24, 0x34	; 52
 16e:	91 e0       	ldi	r25, 0x01	; 1
 170:	b9 01       	movw	r22, r18
 172:	0e 94 b5 01 	call	0x36a	; 0x36a <_ZN14ArduinoLibrary15Cmissionconsole7adValueEj>

		// increment the value to make a change in the display
		tx_cnt++;
 176:	8d 81       	ldd	r24, Y+5	; 0x05
 178:	8f 5f       	subi	r24, 0xFF	; 255
 17a:	8d 83       	std	Y+5, r24	; 0x05
	uint8_t tx_cnt = 0;

	// Allow commumication throught the defined channel
	mission_console.enable();
	
	while(1){
 17c:	af cf       	rjmp	.-162    	; 0xdc <main+0x1c>

0000017e <_Z41__static_initialization_and_destruction_0ii>:

	}

	// deconstruct the object
	mission_console.~Cmissionconsole();
}
 17e:	df 93       	push	r29
 180:	cf 93       	push	r28
 182:	00 d0       	rcall	.+0      	; 0x184 <_Z41__static_initialization_and_destruction_0ii+0x6>
 184:	00 d0       	rcall	.+0      	; 0x186 <_Z41__static_initialization_and_destruction_0ii+0x8>
 186:	cd b7       	in	r28, 0x3d	; 61
 188:	de b7       	in	r29, 0x3e	; 62
 18a:	9a 83       	std	Y+2, r25	; 0x02
 18c:	89 83       	std	Y+1, r24	; 0x01
 18e:	7c 83       	std	Y+4, r23	; 0x04
 190:	6b 83       	std	Y+3, r22	; 0x03
 192:	89 81       	ldd	r24, Y+1	; 0x01
 194:	9a 81       	ldd	r25, Y+2	; 0x02
 196:	81 30       	cpi	r24, 0x01	; 1
 198:	91 05       	cpc	r25, r1
 19a:	51 f4       	brne	.+20     	; 0x1b0 <_Z41__static_initialization_and_destruction_0ii+0x32>
 19c:	8b 81       	ldd	r24, Y+3	; 0x03
 19e:	9c 81       	ldd	r25, Y+4	; 0x04
 1a0:	2f ef       	ldi	r18, 0xFF	; 255
 1a2:	8f 3f       	cpi	r24, 0xFF	; 255
 1a4:	92 07       	cpc	r25, r18
 1a6:	21 f4       	brne	.+8      	; 0x1b0 <_Z41__static_initialization_and_destruction_0ii+0x32>
 */

#include "ArduinoLib.h"

// declare the mission console object
ArduinoLibrary::Cmissionconsole mission_console;
 1a8:	84 e3       	ldi	r24, 0x34	; 52
 1aa:	91 e0       	ldi	r25, 0x01	; 1
 1ac:	0e 94 1f 01 	call	0x23e	; 0x23e <_ZN14ArduinoLibrary15CmissionconsoleC1Ev>
 1b0:	89 81       	ldd	r24, Y+1	; 0x01
 1b2:	9a 81       	ldd	r25, Y+2	; 0x02
 1b4:	00 97       	sbiw	r24, 0x00	; 0
 1b6:	51 f4       	brne	.+20     	; 0x1cc <_Z41__static_initialization_and_destruction_0ii+0x4e>
 1b8:	8b 81       	ldd	r24, Y+3	; 0x03
 1ba:	9c 81       	ldd	r25, Y+4	; 0x04
 1bc:	2f ef       	ldi	r18, 0xFF	; 255
 1be:	8f 3f       	cpi	r24, 0xFF	; 255
 1c0:	92 07       	cpc	r25, r18
 1c2:	21 f4       	brne	.+8      	; 0x1cc <_Z41__static_initialization_and_destruction_0ii+0x4e>
 1c4:	84 e3       	ldi	r24, 0x34	; 52
 1c6:	91 e0       	ldi	r25, 0x01	; 1
 1c8:	0e 94 43 01 	call	0x286	; 0x286 <_ZN14ArduinoLibrary15CmissionconsoleD1Ev>

	}

	// deconstruct the object
	mission_console.~Cmissionconsole();
}
 1cc:	0f 90       	pop	r0
 1ce:	0f 90       	pop	r0
 1d0:	0f 90       	pop	r0
 1d2:	0f 90       	pop	r0
 1d4:	cf 91       	pop	r28
 1d6:	df 91       	pop	r29
 1d8:	08 95       	ret

000001da <_GLOBAL__I_mission_console>:
 1da:	df 93       	push	r29
 1dc:	cf 93       	push	r28
 1de:	cd b7       	in	r28, 0x3d	; 61
 1e0:	de b7       	in	r29, 0x3e	; 62
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	6f ef       	ldi	r22, 0xFF	; 255
 1e8:	7f ef       	ldi	r23, 0xFF	; 255
 1ea:	0e 94 bf 00 	call	0x17e	; 0x17e <_Z41__static_initialization_and_destruction_0ii>
 1ee:	cf 91       	pop	r28
 1f0:	df 91       	pop	r29
 1f2:	08 95       	ret

000001f4 <_GLOBAL__D_mission_console>:
 1f4:	df 93       	push	r29
 1f6:	cf 93       	push	r28
 1f8:	cd b7       	in	r28, 0x3d	; 61
 1fa:	de b7       	in	r29, 0x3e	; 62
 1fc:	80 e0       	ldi	r24, 0x00	; 0
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	6f ef       	ldi	r22, 0xFF	; 255
 202:	7f ef       	ldi	r23, 0xFF	; 255
 204:	0e 94 bf 00 	call	0x17e	; 0x17e <_Z41__static_initialization_and_destruction_0ii>
 208:	cf 91       	pop	r28
 20a:	df 91       	pop	r29
 20c:	08 95       	ret

0000020e <_ZN14ArduinoLibrary15CmissionconsoleC2Ev>:

#include "MissionConsole.h"

namespace ArduinoLibrary{

Cmissionconsole::Cmissionconsole()
 20e:	df 93       	push	r29
 210:	cf 93       	push	r28
 212:	00 d0       	rcall	.+0      	; 0x214 <_ZN14ArduinoLibrary15CmissionconsoleC2Ev+0x6>
 214:	cd b7       	in	r28, 0x3d	; 61
 216:	de b7       	in	r29, 0x3e	; 62
 218:	9a 83       	std	Y+2, r25	; 0x02
 21a:	89 83       	std	Y+1, r24	; 0x01
{
	// set the baud rate
	UBRR0 = REG_BAUD_VAL;
 21c:	84 ec       	ldi	r24, 0xC4	; 196
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	20 e1       	ldi	r18, 0x10	; 16
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	fc 01       	movw	r30, r24
 226:	31 83       	std	Z+1, r19	; 0x01
 228:	20 83       	st	Z, r18
	// set the data to 8-bits
	UCSR0C = 6;
 22a:	82 ec       	ldi	r24, 0xC2	; 194
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	26 e0       	ldi	r18, 0x06	; 6
 230:	fc 01       	movw	r30, r24
 232:	20 83       	st	Z, r18
}
 234:	0f 90       	pop	r0
 236:	0f 90       	pop	r0
 238:	cf 91       	pop	r28
 23a:	df 91       	pop	r29
 23c:	08 95       	ret

0000023e <_ZN14ArduinoLibrary15CmissionconsoleC1Ev>:

#include "MissionConsole.h"

namespace ArduinoLibrary{

Cmissionconsole::Cmissionconsole()
 23e:	df 93       	push	r29
 240:	cf 93       	push	r28
 242:	00 d0       	rcall	.+0      	; 0x244 <_ZN14ArduinoLibrary15CmissionconsoleC1Ev+0x6>
 244:	cd b7       	in	r28, 0x3d	; 61
 246:	de b7       	in	r29, 0x3e	; 62
 248:	9a 83       	std	Y+2, r25	; 0x02
 24a:	89 83       	std	Y+1, r24	; 0x01
{
	// set the baud rate
	UBRR0 = REG_BAUD_VAL;
 24c:	84 ec       	ldi	r24, 0xC4	; 196
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	20 e1       	ldi	r18, 0x10	; 16
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	fc 01       	movw	r30, r24
 256:	31 83       	std	Z+1, r19	; 0x01
 258:	20 83       	st	Z, r18
	// set the data to 8-bits
	UCSR0C = 6;
 25a:	82 ec       	ldi	r24, 0xC2	; 194
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	26 e0       	ldi	r18, 0x06	; 6
 260:	fc 01       	movw	r30, r24
 262:	20 83       	st	Z, r18
}
 264:	0f 90       	pop	r0
 266:	0f 90       	pop	r0
 268:	cf 91       	pop	r28
 26a:	df 91       	pop	r29
 26c:	08 95       	ret

0000026e <_ZN14ArduinoLibrary15CmissionconsoleD2Ev>:

Cmissionconsole::~Cmissionconsole()
 26e:	df 93       	push	r29
 270:	cf 93       	push	r28
 272:	00 d0       	rcall	.+0      	; 0x274 <_ZN14ArduinoLibrary15CmissionconsoleD2Ev+0x6>
 274:	cd b7       	in	r28, 0x3d	; 61
 276:	de b7       	in	r29, 0x3e	; 62
 278:	9a 83       	std	Y+2, r25	; 0x02
 27a:	89 83       	std	Y+1, r24	; 0x01
{

}
 27c:	0f 90       	pop	r0
 27e:	0f 90       	pop	r0
 280:	cf 91       	pop	r28
 282:	df 91       	pop	r29
 284:	08 95       	ret

00000286 <_ZN14ArduinoLibrary15CmissionconsoleD1Ev>:
	UBRR0 = REG_BAUD_VAL;
	// set the data to 8-bits
	UCSR0C = 6;
}

Cmissionconsole::~Cmissionconsole()
 286:	df 93       	push	r29
 288:	cf 93       	push	r28
 28a:	00 d0       	rcall	.+0      	; 0x28c <_ZN14ArduinoLibrary15CmissionconsoleD1Ev+0x6>
 28c:	cd b7       	in	r28, 0x3d	; 61
 28e:	de b7       	in	r29, 0x3e	; 62
 290:	9a 83       	std	Y+2, r25	; 0x02
 292:	89 83       	std	Y+1, r24	; 0x01
{

}
 294:	0f 90       	pop	r0
 296:	0f 90       	pop	r0
 298:	cf 91       	pop	r28
 29a:	df 91       	pop	r29
 29c:	08 95       	ret

0000029e <_ZN14ArduinoLibrary15Cmissionconsole6enableEv>:

void Cmissionconsole::enable()
{
 29e:	df 93       	push	r29
 2a0:	cf 93       	push	r28
 2a2:	00 d0       	rcall	.+0      	; 0x2a4 <_ZN14ArduinoLibrary15Cmissionconsole6enableEv+0x6>
 2a4:	cd b7       	in	r28, 0x3d	; 61
 2a6:	de b7       	in	r29, 0x3e	; 62
 2a8:	9a 83       	std	Y+2, r25	; 0x02
 2aa:	89 83       	std	Y+1, r24	; 0x01
	// enable interrupts??  definately TX AND RX enable
	UCSR0B = 0x18;
 2ac:	81 ec       	ldi	r24, 0xC1	; 193
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	28 e1       	ldi	r18, 0x18	; 24
 2b2:	fc 01       	movw	r30, r24
 2b4:	20 83       	st	Z, r18
}
 2b6:	0f 90       	pop	r0
 2b8:	0f 90       	pop	r0
 2ba:	cf 91       	pop	r28
 2bc:	df 91       	pop	r29
 2be:	08 95       	ret

000002c0 <_ZN14ArduinoLibrary15Cmissionconsole7disableEv>:

void Cmissionconsole::disable()
{
 2c0:	df 93       	push	r29
 2c2:	cf 93       	push	r28
 2c4:	00 d0       	rcall	.+0      	; 0x2c6 <_ZN14ArduinoLibrary15Cmissionconsole7disableEv+0x6>
 2c6:	cd b7       	in	r28, 0x3d	; 61
 2c8:	de b7       	in	r29, 0x3e	; 62
 2ca:	9a 83       	std	Y+2, r25	; 0x02
 2cc:	89 83       	std	Y+1, r24	; 0x01
	// disable the UART tx and rx
	UCSR0B = 0;
 2ce:	81 ec       	ldi	r24, 0xC1	; 193
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	fc 01       	movw	r30, r24
 2d4:	10 82       	st	Z, r1
}
 2d6:	0f 90       	pop	r0
 2d8:	0f 90       	pop	r0
 2da:	cf 91       	pop	r28
 2dc:	df 91       	pop	r29
 2de:	08 95       	ret

000002e0 <_ZN14ArduinoLibrary15Cmissionconsole5writeEh>:

void Cmissionconsole::write(uint8_t in)
{
 2e0:	df 93       	push	r29
 2e2:	cf 93       	push	r28
 2e4:	00 d0       	rcall	.+0      	; 0x2e6 <_ZN14ArduinoLibrary15Cmissionconsole5writeEh+0x6>
 2e6:	0f 92       	push	r0
 2e8:	cd b7       	in	r28, 0x3d	; 61
 2ea:	de b7       	in	r29, 0x3e	; 62
 2ec:	9a 83       	std	Y+2, r25	; 0x02
 2ee:	89 83       	std	Y+1, r24	; 0x01
 2f0:	6b 83       	std	Y+3, r22	; 0x03
	//UDR0 = in;
}
 2f2:	0f 90       	pop	r0
 2f4:	0f 90       	pop	r0
 2f6:	0f 90       	pop	r0
 2f8:	cf 91       	pop	r28
 2fa:	df 91       	pop	r29
 2fc:	08 95       	ret

000002fe <_ZN14ArduinoLibrary15Cmissionconsole5writeEPc>:

void Cmissionconsole::write(char* in)
{
 2fe:	df 93       	push	r29
 300:	cf 93       	push	r28
 302:	00 d0       	rcall	.+0      	; 0x304 <_ZN14ArduinoLibrary15Cmissionconsole5writeEPc+0x6>
 304:	00 d0       	rcall	.+0      	; 0x306 <_ZN14ArduinoLibrary15Cmissionconsole5writeEPc+0x8>
 306:	cd b7       	in	r28, 0x3d	; 61
 308:	de b7       	in	r29, 0x3e	; 62
 30a:	9a 83       	std	Y+2, r25	; 0x02
 30c:	89 83       	std	Y+1, r24	; 0x01
 30e:	7c 83       	std	Y+4, r23	; 0x04
 310:	6b 83       	std	Y+3, r22	; 0x03
	while (*in != 0x00){
 312:	1b c0       	rjmp	.+54     	; 0x34a <_ZN14ArduinoLibrary15Cmissionconsole5writeEPc+0x4c>
		while ( !( UCSR0A & (1<<5)) );
 314:	80 ec       	ldi	r24, 0xC0	; 192
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	fc 01       	movw	r30, r24
 31a:	80 81       	ld	r24, Z
 31c:	88 2f       	mov	r24, r24
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	80 72       	andi	r24, 0x20	; 32
 322:	90 70       	andi	r25, 0x00	; 0
 324:	20 e0       	ldi	r18, 0x00	; 0
 326:	00 97       	sbiw	r24, 0x00	; 0
 328:	09 f4       	brne	.+2      	; 0x32c <_ZN14ArduinoLibrary15Cmissionconsole5writeEPc+0x2e>
 32a:	21 e0       	ldi	r18, 0x01	; 1
 32c:	22 23       	and	r18, r18
 32e:	91 f7       	brne	.-28     	; 0x314 <_ZN14ArduinoLibrary15Cmissionconsole5writeEPc+0x16>
		UDR0 = *in;
 330:	86 ec       	ldi	r24, 0xC6	; 198
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	2b 81       	ldd	r18, Y+3	; 0x03
 336:	3c 81       	ldd	r19, Y+4	; 0x04
 338:	f9 01       	movw	r30, r18
 33a:	20 81       	ld	r18, Z
 33c:	fc 01       	movw	r30, r24
 33e:	20 83       	st	Z, r18
		in++;
 340:	8b 81       	ldd	r24, Y+3	; 0x03
 342:	9c 81       	ldd	r25, Y+4	; 0x04
 344:	01 96       	adiw	r24, 0x01	; 1
 346:	9c 83       	std	Y+4, r25	; 0x04
 348:	8b 83       	std	Y+3, r24	; 0x03
	//UDR0 = in;
}

void Cmissionconsole::write(char* in)
{
	while (*in != 0x00){
 34a:	8b 81       	ldd	r24, Y+3	; 0x03
 34c:	9c 81       	ldd	r25, Y+4	; 0x04
 34e:	fc 01       	movw	r30, r24
 350:	80 81       	ld	r24, Z
 352:	88 23       	and	r24, r24
 354:	09 f0       	breq	.+2      	; 0x358 <_ZN14ArduinoLibrary15Cmissionconsole5writeEPc+0x5a>
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	88 23       	and	r24, r24
 35a:	e1 f6       	brne	.-72     	; 0x314 <_ZN14ArduinoLibrary15Cmissionconsole5writeEPc+0x16>
		while ( !( UCSR0A & (1<<5)) );
		UDR0 = *in;
		in++;
	}
}
 35c:	0f 90       	pop	r0
 35e:	0f 90       	pop	r0
 360:	0f 90       	pop	r0
 362:	0f 90       	pop	r0
 364:	cf 91       	pop	r28
 366:	df 91       	pop	r29
 368:	08 95       	ret

0000036a <_ZN14ArduinoLibrary15Cmissionconsole7adValueEj>:

void Cmissionconsole::adValue(uint16_t in)
{
 36a:	df 93       	push	r29
 36c:	cf 93       	push	r28
 36e:	cd b7       	in	r28, 0x3d	; 61
 370:	de b7       	in	r29, 0x3e	; 62
 372:	28 97       	sbiw	r28, 0x08	; 8
 374:	0f b6       	in	r0, 0x3f	; 63
 376:	f8 94       	cli
 378:	de bf       	out	0x3e, r29	; 62
 37a:	0f be       	out	0x3f, r0	; 63
 37c:	cd bf       	out	0x3d, r28	; 61
 37e:	9e 83       	std	Y+6, r25	; 0x06
 380:	8d 83       	std	Y+5, r24	; 0x05
 382:	78 87       	std	Y+8, r23	; 0x08
 384:	6f 83       	std	Y+7, r22	; 0x07
	char* tmp = (char*)calloc(64, sizeof(char));
 386:	80 e4       	ldi	r24, 0x40	; 64
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	61 e0       	ldi	r22, 0x01	; 1
 38c:	70 e0       	ldi	r23, 0x00	; 0
 38e:	0e 94 b4 02 	call	0x568	; 0x568 <calloc>
 392:	9c 83       	std	Y+4, r25	; 0x04
 394:	8b 83       	std	Y+3, r24	; 0x03
	char* tmp_base = tmp;
 396:	8b 81       	ldd	r24, Y+3	; 0x03
 398:	9c 81       	ldd	r25, Y+4	; 0x04
 39a:	9a 83       	std	Y+2, r25	; 0x02
 39c:	89 83       	std	Y+1, r24	; 0x01
	// no room on the heap
	if (tmp == NULL){
 39e:	8b 81       	ldd	r24, Y+3	; 0x03
 3a0:	9c 81       	ldd	r25, Y+4	; 0x04
 3a2:	00 97       	sbiw	r24, 0x00	; 0
 3a4:	59 f1       	breq	.+86     	; 0x3fc <_ZN14ArduinoLibrary15Cmissionconsole7adValueEj+0x92>
		return;
	}
	// build the a/d conversion packet
	sprintf(tmp, "<a/d - %d>\n", in);
 3a6:	00 d0       	rcall	.+0      	; 0x3a8 <_ZN14ArduinoLibrary15Cmissionconsole7adValueEj+0x3e>
 3a8:	00 d0       	rcall	.+0      	; 0x3aa <_ZN14ArduinoLibrary15Cmissionconsole7adValueEj+0x40>
 3aa:	00 d0       	rcall	.+0      	; 0x3ac <_ZN14ArduinoLibrary15Cmissionconsole7adValueEj+0x42>
 3ac:	8d b7       	in	r24, 0x3d	; 61
 3ae:	9e b7       	in	r25, 0x3e	; 62
 3b0:	01 96       	adiw	r24, 0x01	; 1
 3b2:	2b 81       	ldd	r18, Y+3	; 0x03
 3b4:	3c 81       	ldd	r19, Y+4	; 0x04
 3b6:	fc 01       	movw	r30, r24
 3b8:	31 83       	std	Z+1, r19	; 0x01
 3ba:	20 83       	st	Z, r18
 3bc:	20 e0       	ldi	r18, 0x00	; 0
 3be:	31 e0       	ldi	r19, 0x01	; 1
 3c0:	fc 01       	movw	r30, r24
 3c2:	33 83       	std	Z+3, r19	; 0x03
 3c4:	22 83       	std	Z+2, r18	; 0x02
 3c6:	2f 81       	ldd	r18, Y+7	; 0x07
 3c8:	38 85       	ldd	r19, Y+8	; 0x08
 3ca:	fc 01       	movw	r30, r24
 3cc:	35 83       	std	Z+5, r19	; 0x05
 3ce:	24 83       	std	Z+4, r18	; 0x04
 3d0:	0e 94 19 04 	call	0x832	; 0x832 <sprintf>
 3d4:	8d b7       	in	r24, 0x3d	; 61
 3d6:	9e b7       	in	r25, 0x3e	; 62
 3d8:	06 96       	adiw	r24, 0x06	; 6
 3da:	0f b6       	in	r0, 0x3f	; 63
 3dc:	f8 94       	cli
 3de:	9e bf       	out	0x3e, r25	; 62
 3e0:	0f be       	out	0x3f, r0	; 63
 3e2:	8d bf       	out	0x3d, r24	; 61
	// send it to the communication channel
	write(tmp);
 3e4:	8d 81       	ldd	r24, Y+5	; 0x05
 3e6:	9e 81       	ldd	r25, Y+6	; 0x06
 3e8:	2b 81       	ldd	r18, Y+3	; 0x03
 3ea:	3c 81       	ldd	r19, Y+4	; 0x04
 3ec:	b9 01       	movw	r22, r18
 3ee:	0e 94 7f 01 	call	0x2fe	; 0x2fe <_ZN14ArduinoLibrary15Cmissionconsole5writeEPc>
	// release the data on the heap
	free(tmp_base);
 3f2:	89 81       	ldd	r24, Y+1	; 0x01
 3f4:	9a 81       	ldd	r25, Y+2	; 0x02
 3f6:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <free>
 3fa:	01 c0       	rjmp	.+2      	; 0x3fe <_ZN14ArduinoLibrary15Cmissionconsole7adValueEj+0x94>
{
	char* tmp = (char*)calloc(64, sizeof(char));
	char* tmp_base = tmp;
	// no room on the heap
	if (tmp == NULL){
		return;
 3fc:	00 00       	nop
	sprintf(tmp, "<a/d - %d>\n", in);
	// send it to the communication channel
	write(tmp);
	// release the data on the heap
	free(tmp_base);
}
 3fe:	28 96       	adiw	r28, 0x08	; 8
 400:	0f b6       	in	r0, 0x3f	; 63
 402:	f8 94       	cli
 404:	de bf       	out	0x3e, r29	; 62
 406:	0f be       	out	0x3f, r0	; 63
 408:	cd bf       	out	0x3d, r28	; 61
 40a:	cf 91       	pop	r28
 40c:	df 91       	pop	r29
 40e:	08 95       	ret

00000410 <_ZN14ArduinoLibrary15Cmissionconsole11longRangeIREj>:

void Cmissionconsole::longRangeIR(uint16_t in)
{
 410:	df 93       	push	r29
 412:	cf 93       	push	r28
 414:	cd b7       	in	r28, 0x3d	; 61
 416:	de b7       	in	r29, 0x3e	; 62
 418:	28 97       	sbiw	r28, 0x08	; 8
 41a:	0f b6       	in	r0, 0x3f	; 63
 41c:	f8 94       	cli
 41e:	de bf       	out	0x3e, r29	; 62
 420:	0f be       	out	0x3f, r0	; 63
 422:	cd bf       	out	0x3d, r28	; 61
 424:	9e 83       	std	Y+6, r25	; 0x06
 426:	8d 83       	std	Y+5, r24	; 0x05
 428:	78 87       	std	Y+8, r23	; 0x08
 42a:	6f 83       	std	Y+7, r22	; 0x07
	char* tmp = (char*)calloc(64, sizeof(char));
 42c:	80 e4       	ldi	r24, 0x40	; 64
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	61 e0       	ldi	r22, 0x01	; 1
 432:	70 e0       	ldi	r23, 0x00	; 0
 434:	0e 94 b4 02 	call	0x568	; 0x568 <calloc>
 438:	9c 83       	std	Y+4, r25	; 0x04
 43a:	8b 83       	std	Y+3, r24	; 0x03
	char* tmp_base = tmp;
 43c:	8b 81       	ldd	r24, Y+3	; 0x03
 43e:	9c 81       	ldd	r25, Y+4	; 0x04
 440:	9a 83       	std	Y+2, r25	; 0x02
 442:	89 83       	std	Y+1, r24	; 0x01
	// no room on the heap
	if (tmp == NULL){
 444:	8b 81       	ldd	r24, Y+3	; 0x03
 446:	9c 81       	ldd	r25, Y+4	; 0x04
 448:	00 97       	sbiw	r24, 0x00	; 0
 44a:	59 f1       	breq	.+86     	; 0x4a2 <_ZN14ArduinoLibrary15Cmissionconsole11longRangeIREj+0x92>
		return;
	}
	// build the a/d conversion packet
	sprintf(tmp, "<l.r.i.r. - %d>\n", in);
 44c:	00 d0       	rcall	.+0      	; 0x44e <_ZN14ArduinoLibrary15Cmissionconsole11longRangeIREj+0x3e>
 44e:	00 d0       	rcall	.+0      	; 0x450 <_ZN14ArduinoLibrary15Cmissionconsole11longRangeIREj+0x40>
 450:	00 d0       	rcall	.+0      	; 0x452 <_ZN14ArduinoLibrary15Cmissionconsole11longRangeIREj+0x42>
 452:	8d b7       	in	r24, 0x3d	; 61
 454:	9e b7       	in	r25, 0x3e	; 62
 456:	01 96       	adiw	r24, 0x01	; 1
 458:	2b 81       	ldd	r18, Y+3	; 0x03
 45a:	3c 81       	ldd	r19, Y+4	; 0x04
 45c:	fc 01       	movw	r30, r24
 45e:	31 83       	std	Z+1, r19	; 0x01
 460:	20 83       	st	Z, r18
 462:	2c e0       	ldi	r18, 0x0C	; 12
 464:	31 e0       	ldi	r19, 0x01	; 1
 466:	fc 01       	movw	r30, r24
 468:	33 83       	std	Z+3, r19	; 0x03
 46a:	22 83       	std	Z+2, r18	; 0x02
 46c:	2f 81       	ldd	r18, Y+7	; 0x07
 46e:	38 85       	ldd	r19, Y+8	; 0x08
 470:	fc 01       	movw	r30, r24
 472:	35 83       	std	Z+5, r19	; 0x05
 474:	24 83       	std	Z+4, r18	; 0x04
 476:	0e 94 19 04 	call	0x832	; 0x832 <sprintf>
 47a:	8d b7       	in	r24, 0x3d	; 61
 47c:	9e b7       	in	r25, 0x3e	; 62
 47e:	06 96       	adiw	r24, 0x06	; 6
 480:	0f b6       	in	r0, 0x3f	; 63
 482:	f8 94       	cli
 484:	9e bf       	out	0x3e, r25	; 62
 486:	0f be       	out	0x3f, r0	; 63
 488:	8d bf       	out	0x3d, r24	; 61
	// send it to the communication channel
	write(tmp);
 48a:	8d 81       	ldd	r24, Y+5	; 0x05
 48c:	9e 81       	ldd	r25, Y+6	; 0x06
 48e:	2b 81       	ldd	r18, Y+3	; 0x03
 490:	3c 81       	ldd	r19, Y+4	; 0x04
 492:	b9 01       	movw	r22, r18
 494:	0e 94 7f 01 	call	0x2fe	; 0x2fe <_ZN14ArduinoLibrary15Cmissionconsole5writeEPc>
	// release the data on the heap
	free(tmp_base);
 498:	89 81       	ldd	r24, Y+1	; 0x01
 49a:	9a 81       	ldd	r25, Y+2	; 0x02
 49c:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <free>
 4a0:	01 c0       	rjmp	.+2      	; 0x4a4 <_ZN14ArduinoLibrary15Cmissionconsole11longRangeIREj+0x94>
{
	char* tmp = (char*)calloc(64, sizeof(char));
	char* tmp_base = tmp;
	// no room on the heap
	if (tmp == NULL){
		return;
 4a2:	00 00       	nop
	sprintf(tmp, "<l.r.i.r. - %d>\n", in);
	// send it to the communication channel
	write(tmp);
	// release the data on the heap
	free(tmp_base);
}
 4a4:	28 96       	adiw	r28, 0x08	; 8
 4a6:	0f b6       	in	r0, 0x3f	; 63
 4a8:	f8 94       	cli
 4aa:	de bf       	out	0x3e, r29	; 62
 4ac:	0f be       	out	0x3f, r0	; 63
 4ae:	cd bf       	out	0x3d, r28	; 61
 4b0:	cf 91       	pop	r28
 4b2:	df 91       	pop	r29
 4b4:	08 95       	ret

000004b6 <_ZN14ArduinoLibrary15Cmissionconsole13mediumRangeIREj>:

void Cmissionconsole::mediumRangeIR(uint16_t in)
{
 4b6:	df 93       	push	r29
 4b8:	cf 93       	push	r28
 4ba:	cd b7       	in	r28, 0x3d	; 61
 4bc:	de b7       	in	r29, 0x3e	; 62
 4be:	28 97       	sbiw	r28, 0x08	; 8
 4c0:	0f b6       	in	r0, 0x3f	; 63
 4c2:	f8 94       	cli
 4c4:	de bf       	out	0x3e, r29	; 62
 4c6:	0f be       	out	0x3f, r0	; 63
 4c8:	cd bf       	out	0x3d, r28	; 61
 4ca:	9e 83       	std	Y+6, r25	; 0x06
 4cc:	8d 83       	std	Y+5, r24	; 0x05
 4ce:	78 87       	std	Y+8, r23	; 0x08
 4d0:	6f 83       	std	Y+7, r22	; 0x07
	char* tmp = (char*)calloc(64, sizeof(char));
 4d2:	80 e4       	ldi	r24, 0x40	; 64
 4d4:	90 e0       	ldi	r25, 0x00	; 0
 4d6:	61 e0       	ldi	r22, 0x01	; 1
 4d8:	70 e0       	ldi	r23, 0x00	; 0
 4da:	0e 94 b4 02 	call	0x568	; 0x568 <calloc>
 4de:	9c 83       	std	Y+4, r25	; 0x04
 4e0:	8b 83       	std	Y+3, r24	; 0x03
	char* tmp_base = tmp;
 4e2:	8b 81       	ldd	r24, Y+3	; 0x03
 4e4:	9c 81       	ldd	r25, Y+4	; 0x04
 4e6:	9a 83       	std	Y+2, r25	; 0x02
 4e8:	89 83       	std	Y+1, r24	; 0x01
	// no room on the heap
	if (tmp == NULL){
 4ea:	8b 81       	ldd	r24, Y+3	; 0x03
 4ec:	9c 81       	ldd	r25, Y+4	; 0x04
 4ee:	00 97       	sbiw	r24, 0x00	; 0
 4f0:	59 f1       	breq	.+86     	; 0x548 <_ZN14ArduinoLibrary15Cmissionconsole13mediumRangeIREj+0x92>
		return;
	}
	// build the a/d conversion packet
	sprintf(tmp, "<m.r.i.r. - %d>\n", in);
 4f2:	00 d0       	rcall	.+0      	; 0x4f4 <_ZN14ArduinoLibrary15Cmissionconsole13mediumRangeIREj+0x3e>
 4f4:	00 d0       	rcall	.+0      	; 0x4f6 <_ZN14ArduinoLibrary15Cmissionconsole13mediumRangeIREj+0x40>
 4f6:	00 d0       	rcall	.+0      	; 0x4f8 <_ZN14ArduinoLibrary15Cmissionconsole13mediumRangeIREj+0x42>
 4f8:	8d b7       	in	r24, 0x3d	; 61
 4fa:	9e b7       	in	r25, 0x3e	; 62
 4fc:	01 96       	adiw	r24, 0x01	; 1
 4fe:	2b 81       	ldd	r18, Y+3	; 0x03
 500:	3c 81       	ldd	r19, Y+4	; 0x04
 502:	fc 01       	movw	r30, r24
 504:	31 83       	std	Z+1, r19	; 0x01
 506:	20 83       	st	Z, r18
 508:	2d e1       	ldi	r18, 0x1D	; 29
 50a:	31 e0       	ldi	r19, 0x01	; 1
 50c:	fc 01       	movw	r30, r24
 50e:	33 83       	std	Z+3, r19	; 0x03
 510:	22 83       	std	Z+2, r18	; 0x02
 512:	2f 81       	ldd	r18, Y+7	; 0x07
 514:	38 85       	ldd	r19, Y+8	; 0x08
 516:	fc 01       	movw	r30, r24
 518:	35 83       	std	Z+5, r19	; 0x05
 51a:	24 83       	std	Z+4, r18	; 0x04
 51c:	0e 94 19 04 	call	0x832	; 0x832 <sprintf>
 520:	8d b7       	in	r24, 0x3d	; 61
 522:	9e b7       	in	r25, 0x3e	; 62
 524:	06 96       	adiw	r24, 0x06	; 6
 526:	0f b6       	in	r0, 0x3f	; 63
 528:	f8 94       	cli
 52a:	9e bf       	out	0x3e, r25	; 62
 52c:	0f be       	out	0x3f, r0	; 63
 52e:	8d bf       	out	0x3d, r24	; 61
	// send it to the communication channel
	write(tmp);
 530:	8d 81       	ldd	r24, Y+5	; 0x05
 532:	9e 81       	ldd	r25, Y+6	; 0x06
 534:	2b 81       	ldd	r18, Y+3	; 0x03
 536:	3c 81       	ldd	r19, Y+4	; 0x04
 538:	b9 01       	movw	r22, r18
 53a:	0e 94 7f 01 	call	0x2fe	; 0x2fe <_ZN14ArduinoLibrary15Cmissionconsole5writeEPc>
	// release the data on the heap
	free(tmp_base);
 53e:	89 81       	ldd	r24, Y+1	; 0x01
 540:	9a 81       	ldd	r25, Y+2	; 0x02
 542:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <free>
 546:	01 c0       	rjmp	.+2      	; 0x54a <_ZN14ArduinoLibrary15Cmissionconsole13mediumRangeIREj+0x94>
{
	char* tmp = (char*)calloc(64, sizeof(char));
	char* tmp_base = tmp;
	// no room on the heap
	if (tmp == NULL){
		return;
 548:	00 00       	nop
	sprintf(tmp, "<m.r.i.r. - %d>\n", in);
	// send it to the communication channel
	write(tmp);
	// release the data on the heap
	free(tmp_base);
}
 54a:	28 96       	adiw	r28, 0x08	; 8
 54c:	0f b6       	in	r0, 0x3f	; 63
 54e:	f8 94       	cli
 550:	de bf       	out	0x3e, r29	; 62
 552:	0f be       	out	0x3f, r0	; 63
 554:	cd bf       	out	0x3d, r28	; 61
 556:	cf 91       	pop	r28
 558:	df 91       	pop	r29
 55a:	08 95       	ret

0000055c <__tablejump2__>:
 55c:	ee 0f       	add	r30, r30
 55e:	ff 1f       	adc	r31, r31

00000560 <__tablejump__>:
 560:	05 90       	lpm	r0, Z+
 562:	f4 91       	lpm	r31, Z+
 564:	e0 2d       	mov	r30, r0
 566:	09 94       	ijmp

00000568 <calloc>:
 568:	ef 92       	push	r14
 56a:	ff 92       	push	r15
 56c:	0f 93       	push	r16
 56e:	1f 93       	push	r17
 570:	cf 93       	push	r28
 572:	df 93       	push	r29
 574:	68 9f       	mul	r22, r24
 576:	80 01       	movw	r16, r0
 578:	69 9f       	mul	r22, r25
 57a:	10 0d       	add	r17, r0
 57c:	78 9f       	mul	r23, r24
 57e:	10 0d       	add	r17, r0
 580:	11 24       	eor	r1, r1
 582:	c8 01       	movw	r24, r16
 584:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <malloc>
 588:	e8 2e       	mov	r14, r24
 58a:	e7 01       	movw	r28, r14
 58c:	7e 01       	movw	r14, r28
 58e:	f9 2e       	mov	r15, r25
 590:	e7 01       	movw	r28, r14
 592:	e1 14       	cp	r14, r1
 594:	f1 04       	cpc	r15, r1
 596:	31 f0       	breq	.+12     	; 0x5a4 <calloc+0x3c>
 598:	8e 2d       	mov	r24, r14
 59a:	60 e0       	ldi	r22, 0x00	; 0
 59c:	70 e0       	ldi	r23, 0x00	; 0
 59e:	a8 01       	movw	r20, r16
 5a0:	0e 94 12 04 	call	0x824	; 0x824 <memset>
 5a4:	7e 01       	movw	r14, r28
 5a6:	ce 01       	movw	r24, r28
 5a8:	cd b7       	in	r28, 0x3d	; 61
 5aa:	de b7       	in	r29, 0x3e	; 62
 5ac:	e6 e0       	ldi	r30, 0x06	; 6
 5ae:	0c 94 dd 06 	jmp	0xdba	; 0xdba <__epilogue_restores__+0x18>

000005b2 <malloc>:
 5b2:	ef 92       	push	r14
 5b4:	ff 92       	push	r15
 5b6:	0f 93       	push	r16
 5b8:	1f 93       	push	r17
 5ba:	cf 93       	push	r28
 5bc:	df 93       	push	r29
 5be:	82 30       	cpi	r24, 0x02	; 2
 5c0:	91 05       	cpc	r25, r1
 5c2:	10 f4       	brcc	.+4      	; 0x5c8 <malloc+0x16>
 5c4:	82 e0       	ldi	r24, 0x02	; 2
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	c0 91 37 01 	lds	r28, 0x0137
 5cc:	d0 91 38 01 	lds	r29, 0x0138
 5d0:	20 e0       	ldi	r18, 0x00	; 0
 5d2:	30 e0       	ldi	r19, 0x00	; 0
 5d4:	40 e0       	ldi	r20, 0x00	; 0
 5d6:	50 e0       	ldi	r21, 0x00	; 0
 5d8:	29 c0       	rjmp	.+82     	; 0x62c <malloc+0x7a>
 5da:	68 81       	ld	r22, Y
 5dc:	79 81       	ldd	r23, Y+1	; 0x01
 5de:	68 17       	cp	r22, r24
 5e0:	79 07       	cpc	r23, r25
 5e2:	d8 f0       	brcs	.+54     	; 0x61a <malloc+0x68>
 5e4:	68 17       	cp	r22, r24
 5e6:	79 07       	cpc	r23, r25
 5e8:	79 f4       	brne	.+30     	; 0x608 <malloc+0x56>
 5ea:	8a 81       	ldd	r24, Y+2	; 0x02
 5ec:	9b 81       	ldd	r25, Y+3	; 0x03
 5ee:	21 15       	cp	r18, r1
 5f0:	31 05       	cpc	r19, r1
 5f2:	21 f0       	breq	.+8      	; 0x5fc <malloc+0x4a>
 5f4:	f9 01       	movw	r30, r18
 5f6:	93 83       	std	Z+3, r25	; 0x03
 5f8:	82 83       	std	Z+2, r24	; 0x02
 5fa:	04 c0       	rjmp	.+8      	; 0x604 <malloc+0x52>
 5fc:	90 93 38 01 	sts	0x0138, r25
 600:	80 93 37 01 	sts	0x0137, r24
 604:	de 01       	movw	r26, r28
 606:	2a c0       	rjmp	.+84     	; 0x65c <malloc+0xaa>
 608:	41 15       	cp	r20, r1
 60a:	51 05       	cpc	r21, r1
 60c:	19 f0       	breq	.+6      	; 0x614 <malloc+0x62>
 60e:	64 17       	cp	r22, r20
 610:	75 07       	cpc	r23, r21
 612:	18 f4       	brcc	.+6      	; 0x61a <malloc+0x68>
 614:	fe 01       	movw	r30, r28
 616:	ab 01       	movw	r20, r22
 618:	d9 01       	movw	r26, r18
 61a:	9e 01       	movw	r18, r28
 61c:	7a 81       	ldd	r23, Y+2	; 0x02
 61e:	6b 81       	ldd	r22, Y+3	; 0x03
 620:	e7 2e       	mov	r14, r23
 622:	e7 01       	movw	r28, r14
 624:	7e 01       	movw	r14, r28
 626:	06 2f       	mov	r16, r22
 628:	f6 2e       	mov	r15, r22
 62a:	e7 01       	movw	r28, r14
 62c:	20 97       	sbiw	r28, 0x00	; 0
 62e:	a9 f6       	brne	.-86     	; 0x5da <malloc+0x28>
 630:	41 15       	cp	r20, r1
 632:	51 05       	cpc	r21, r1
 634:	f9 f0       	breq	.+62     	; 0x674 <malloc+0xc2>
 636:	48 1b       	sub	r20, r24
 638:	59 0b       	sbc	r21, r25
 63a:	44 30       	cpi	r20, 0x04	; 4
 63c:	51 05       	cpc	r21, r1
 63e:	80 f4       	brcc	.+32     	; 0x660 <malloc+0xae>
 640:	82 81       	ldd	r24, Z+2	; 0x02
 642:	93 81       	ldd	r25, Z+3	; 0x03
 644:	10 97       	sbiw	r26, 0x00	; 0
 646:	29 f0       	breq	.+10     	; 0x652 <malloc+0xa0>
 648:	13 96       	adiw	r26, 0x03	; 3
 64a:	9c 93       	st	X, r25
 64c:	8e 93       	st	-X, r24
 64e:	12 97       	sbiw	r26, 0x02	; 2
 650:	04 c0       	rjmp	.+8      	; 0x65a <malloc+0xa8>
 652:	90 93 38 01 	sts	0x0138, r25
 656:	80 93 37 01 	sts	0x0137, r24
 65a:	df 01       	movw	r26, r30
 65c:	12 96       	adiw	r26, 0x02	; 2
 65e:	45 c0       	rjmp	.+138    	; 0x6ea <malloc+0x138>
 660:	df 01       	movw	r26, r30
 662:	a4 0f       	add	r26, r20
 664:	b5 1f       	adc	r27, r21
 666:	8d 93       	st	X+, r24
 668:	9d 93       	st	X+, r25
 66a:	42 50       	subi	r20, 0x02	; 2
 66c:	50 40       	sbci	r21, 0x00	; 0
 66e:	51 83       	std	Z+1, r21	; 0x01
 670:	40 83       	st	Z, r20
 672:	3b c0       	rjmp	.+118    	; 0x6ea <malloc+0x138>
 674:	20 91 35 01 	lds	r18, 0x0135
 678:	30 91 36 01 	lds	r19, 0x0136
 67c:	21 15       	cp	r18, r1
 67e:	31 05       	cpc	r19, r1
 680:	41 f4       	brne	.+16     	; 0x692 <malloc+0xe0>
 682:	20 91 30 01 	lds	r18, 0x0130
 686:	30 91 31 01 	lds	r19, 0x0131
 68a:	30 93 36 01 	sts	0x0136, r19
 68e:	20 93 35 01 	sts	0x0135, r18
 692:	20 91 32 01 	lds	r18, 0x0132
 696:	30 91 33 01 	lds	r19, 0x0133
 69a:	21 15       	cp	r18, r1
 69c:	31 05       	cpc	r19, r1
 69e:	41 f4       	brne	.+16     	; 0x6b0 <malloc+0xfe>
 6a0:	2d b7       	in	r18, 0x3d	; 61
 6a2:	3e b7       	in	r19, 0x3e	; 62
 6a4:	40 91 2e 01 	lds	r20, 0x012E
 6a8:	50 91 2f 01 	lds	r21, 0x012F
 6ac:	24 1b       	sub	r18, r20
 6ae:	35 0b       	sbc	r19, r21
 6b0:	a0 91 35 01 	lds	r26, 0x0135
 6b4:	b0 91 36 01 	lds	r27, 0x0136
 6b8:	a2 17       	cp	r26, r18
 6ba:	b3 07       	cpc	r27, r19
 6bc:	a0 f4       	brcc	.+40     	; 0x6e6 <malloc+0x134>
 6be:	2a 1b       	sub	r18, r26
 6c0:	3b 0b       	sbc	r19, r27
 6c2:	28 17       	cp	r18, r24
 6c4:	39 07       	cpc	r19, r25
 6c6:	78 f0       	brcs	.+30     	; 0x6e6 <malloc+0x134>
 6c8:	ac 01       	movw	r20, r24
 6ca:	4e 5f       	subi	r20, 0xFE	; 254
 6cc:	5f 4f       	sbci	r21, 0xFF	; 255
 6ce:	24 17       	cp	r18, r20
 6d0:	35 07       	cpc	r19, r21
 6d2:	48 f0       	brcs	.+18     	; 0x6e6 <malloc+0x134>
 6d4:	4a 0f       	add	r20, r26
 6d6:	5b 1f       	adc	r21, r27
 6d8:	50 93 36 01 	sts	0x0136, r21
 6dc:	40 93 35 01 	sts	0x0135, r20
 6e0:	8d 93       	st	X+, r24
 6e2:	9d 93       	st	X+, r25
 6e4:	02 c0       	rjmp	.+4      	; 0x6ea <malloc+0x138>
 6e6:	a0 e0       	ldi	r26, 0x00	; 0
 6e8:	b0 e0       	ldi	r27, 0x00	; 0
 6ea:	cd 01       	movw	r24, r26
 6ec:	cd b7       	in	r28, 0x3d	; 61
 6ee:	de b7       	in	r29, 0x3e	; 62
 6f0:	e6 e0       	ldi	r30, 0x06	; 6
 6f2:	0c 94 dd 06 	jmp	0xdba	; 0xdba <__epilogue_restores__+0x18>

000006f6 <free>:
 6f6:	cf 93       	push	r28
 6f8:	df 93       	push	r29
 6fa:	00 97       	sbiw	r24, 0x00	; 0
 6fc:	09 f4       	brne	.+2      	; 0x700 <free+0xa>
 6fe:	8f c0       	rjmp	.+286    	; 0x81e <free+0x128>
 700:	fc 01       	movw	r30, r24
 702:	32 97       	sbiw	r30, 0x02	; 2
 704:	13 82       	std	Z+3, r1	; 0x03
 706:	12 82       	std	Z+2, r1	; 0x02
 708:	60 91 37 01 	lds	r22, 0x0137
 70c:	70 91 38 01 	lds	r23, 0x0138
 710:	61 15       	cp	r22, r1
 712:	71 05       	cpc	r23, r1
 714:	81 f4       	brne	.+32     	; 0x736 <free+0x40>
 716:	20 81       	ld	r18, Z
 718:	31 81       	ldd	r19, Z+1	; 0x01
 71a:	28 0f       	add	r18, r24
 71c:	39 1f       	adc	r19, r25
 71e:	80 91 35 01 	lds	r24, 0x0135
 722:	90 91 36 01 	lds	r25, 0x0136
 726:	82 17       	cp	r24, r18
 728:	93 07       	cpc	r25, r19
 72a:	61 f5       	brne	.+88     	; 0x784 <free+0x8e>
 72c:	f0 93 36 01 	sts	0x0136, r31
 730:	e0 93 35 01 	sts	0x0135, r30
 734:	74 c0       	rjmp	.+232    	; 0x81e <free+0x128>
 736:	eb 01       	movw	r28, r22
 738:	80 e0       	ldi	r24, 0x00	; 0
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	ce 17       	cp	r28, r30
 73e:	df 07       	cpc	r29, r31
 740:	40 f4       	brcc	.+16     	; 0x752 <free+0x5c>
 742:	2a 81       	ldd	r18, Y+2	; 0x02
 744:	3b 81       	ldd	r19, Y+3	; 0x03
 746:	ce 01       	movw	r24, r28
 748:	21 15       	cp	r18, r1
 74a:	31 05       	cpc	r19, r1
 74c:	01 f1       	breq	.+64     	; 0x78e <free+0x98>
 74e:	e9 01       	movw	r28, r18
 750:	f5 cf       	rjmp	.-22     	; 0x73c <free+0x46>
 752:	d3 83       	std	Z+3, r29	; 0x03
 754:	c2 83       	std	Z+2, r28	; 0x02
 756:	df 01       	movw	r26, r30
 758:	4d 91       	ld	r20, X+
 75a:	5d 91       	ld	r21, X+
 75c:	9d 01       	movw	r18, r26
 75e:	24 0f       	add	r18, r20
 760:	35 1f       	adc	r19, r21
 762:	c2 17       	cp	r28, r18
 764:	d3 07       	cpc	r29, r19
 766:	61 f4       	brne	.+24     	; 0x780 <free+0x8a>
 768:	28 81       	ld	r18, Y
 76a:	39 81       	ldd	r19, Y+1	; 0x01
 76c:	24 0f       	add	r18, r20
 76e:	35 1f       	adc	r19, r21
 770:	2e 5f       	subi	r18, 0xFE	; 254
 772:	3f 4f       	sbci	r19, 0xFF	; 255
 774:	31 83       	std	Z+1, r19	; 0x01
 776:	20 83       	st	Z, r18
 778:	2a 81       	ldd	r18, Y+2	; 0x02
 77a:	3b 81       	ldd	r19, Y+3	; 0x03
 77c:	33 83       	std	Z+3, r19	; 0x03
 77e:	22 83       	std	Z+2, r18	; 0x02
 780:	00 97       	sbiw	r24, 0x00	; 0
 782:	29 f4       	brne	.+10     	; 0x78e <free+0x98>
 784:	f0 93 38 01 	sts	0x0138, r31
 788:	e0 93 37 01 	sts	0x0137, r30
 78c:	48 c0       	rjmp	.+144    	; 0x81e <free+0x128>
 78e:	dc 01       	movw	r26, r24
 790:	13 96       	adiw	r26, 0x03	; 3
 792:	fc 93       	st	X, r31
 794:	ee 93       	st	-X, r30
 796:	12 97       	sbiw	r26, 0x02	; 2
 798:	ec 01       	movw	r28, r24
 79a:	49 91       	ld	r20, Y+
 79c:	59 91       	ld	r21, Y+
 79e:	c4 0f       	add	r28, r20
 7a0:	d5 1f       	adc	r29, r21
 7a2:	ec 17       	cp	r30, r28
 7a4:	fd 07       	cpc	r31, r29
 7a6:	79 f4       	brne	.+30     	; 0x7c6 <free+0xd0>
 7a8:	20 81       	ld	r18, Z
 7aa:	31 81       	ldd	r19, Z+1	; 0x01
 7ac:	24 0f       	add	r18, r20
 7ae:	35 1f       	adc	r19, r21
 7b0:	2e 5f       	subi	r18, 0xFE	; 254
 7b2:	3f 4f       	sbci	r19, 0xFF	; 255
 7b4:	11 96       	adiw	r26, 0x01	; 1
 7b6:	3c 93       	st	X, r19
 7b8:	2e 93       	st	-X, r18
 7ba:	22 81       	ldd	r18, Z+2	; 0x02
 7bc:	33 81       	ldd	r19, Z+3	; 0x03
 7be:	13 96       	adiw	r26, 0x03	; 3
 7c0:	3c 93       	st	X, r19
 7c2:	2e 93       	st	-X, r18
 7c4:	12 97       	sbiw	r26, 0x02	; 2
 7c6:	e0 e0       	ldi	r30, 0x00	; 0
 7c8:	f0 e0       	ldi	r31, 0x00	; 0
 7ca:	db 01       	movw	r26, r22
 7cc:	12 96       	adiw	r26, 0x02	; 2
 7ce:	8d 91       	ld	r24, X+
 7d0:	9c 91       	ld	r25, X
 7d2:	13 97       	sbiw	r26, 0x03	; 3
 7d4:	00 97       	sbiw	r24, 0x00	; 0
 7d6:	21 f0       	breq	.+8      	; 0x7e0 <free+0xea>
 7d8:	e6 2f       	mov	r30, r22
 7da:	f7 2f       	mov	r31, r23
 7dc:	bc 01       	movw	r22, r24
 7de:	f5 cf       	rjmp	.-22     	; 0x7ca <free+0xd4>
 7e0:	9b 01       	movw	r18, r22
 7e2:	2e 5f       	subi	r18, 0xFE	; 254
 7e4:	3f 4f       	sbci	r19, 0xFF	; 255
 7e6:	db 01       	movw	r26, r22
 7e8:	8d 91       	ld	r24, X+
 7ea:	9c 91       	ld	r25, X
 7ec:	11 97       	sbiw	r26, 0x01	; 1
 7ee:	82 0f       	add	r24, r18
 7f0:	93 1f       	adc	r25, r19
 7f2:	40 91 35 01 	lds	r20, 0x0135
 7f6:	50 91 36 01 	lds	r21, 0x0136
 7fa:	48 17       	cp	r20, r24
 7fc:	59 07       	cpc	r21, r25
 7fe:	79 f4       	brne	.+30     	; 0x81e <free+0x128>
 800:	30 97       	sbiw	r30, 0x00	; 0
 802:	29 f4       	brne	.+10     	; 0x80e <free+0x118>
 804:	10 92 38 01 	sts	0x0138, r1
 808:	10 92 37 01 	sts	0x0137, r1
 80c:	02 c0       	rjmp	.+4      	; 0x812 <free+0x11c>
 80e:	13 82       	std	Z+3, r1	; 0x03
 810:	12 82       	std	Z+2, r1	; 0x02
 812:	22 50       	subi	r18, 0x02	; 2
 814:	30 40       	sbci	r19, 0x00	; 0
 816:	30 93 36 01 	sts	0x0136, r19
 81a:	20 93 35 01 	sts	0x0135, r18
 81e:	df 91       	pop	r29
 820:	cf 91       	pop	r28
 822:	08 95       	ret

00000824 <memset>:
 824:	dc 01       	movw	r26, r24
 826:	01 c0       	rjmp	.+2      	; 0x82a <memset+0x6>
 828:	6d 93       	st	X+, r22
 82a:	41 50       	subi	r20, 0x01	; 1
 82c:	50 40       	sbci	r21, 0x00	; 0
 82e:	e0 f7       	brcc	.-8      	; 0x828 <memset+0x4>
 830:	08 95       	ret

00000832 <sprintf>:
 832:	ae e0       	ldi	r26, 0x0E	; 14
 834:	b0 e0       	ldi	r27, 0x00	; 0
 836:	ef e1       	ldi	r30, 0x1F	; 31
 838:	f4 e0       	ldi	r31, 0x04	; 4
 83a:	0c 94 c3 06 	jmp	0xd86	; 0xd86 <__prologue_saves__+0x1c>
 83e:	0d 89       	ldd	r16, Y+21	; 0x15
 840:	1e 89       	ldd	r17, Y+22	; 0x16
 842:	86 e0       	ldi	r24, 0x06	; 6
 844:	8c 83       	std	Y+4, r24	; 0x04
 846:	1a 83       	std	Y+2, r17	; 0x02
 848:	09 83       	std	Y+1, r16	; 0x01
 84a:	8f ef       	ldi	r24, 0xFF	; 255
 84c:	9f e7       	ldi	r25, 0x7F	; 127
 84e:	9e 83       	std	Y+6, r25	; 0x06
 850:	8d 83       	std	Y+5, r24	; 0x05
 852:	9e 01       	movw	r18, r28
 854:	27 5e       	subi	r18, 0xE7	; 231
 856:	3f 4f       	sbci	r19, 0xFF	; 255
 858:	ce 01       	movw	r24, r28
 85a:	01 96       	adiw	r24, 0x01	; 1
 85c:	6f 89       	ldd	r22, Y+23	; 0x17
 85e:	78 8d       	ldd	r23, Y+24	; 0x18
 860:	a9 01       	movw	r20, r18
 862:	0e 94 3c 04 	call	0x878	; 0x878 <vfprintf>
 866:	ef 81       	ldd	r30, Y+7	; 0x07
 868:	f8 85       	ldd	r31, Y+8	; 0x08
 86a:	e0 0f       	add	r30, r16
 86c:	f1 1f       	adc	r31, r17
 86e:	10 82       	st	Z, r1
 870:	2e 96       	adiw	r28, 0x0e	; 14
 872:	e4 e0       	ldi	r30, 0x04	; 4
 874:	0c 94 df 06 	jmp	0xdbe	; 0xdbe <__epilogue_restores__+0x1c>

00000878 <vfprintf>:
 878:	ac e0       	ldi	r26, 0x0C	; 12
 87a:	b0 e0       	ldi	r27, 0x00	; 0
 87c:	e2 e4       	ldi	r30, 0x42	; 66
 87e:	f4 e0       	ldi	r31, 0x04	; 4
 880:	0c 94 b6 06 	jmp	0xd6c	; 0xd6c <__prologue_saves__+0x2>
 884:	6c 01       	movw	r12, r24
 886:	2b 01       	movw	r4, r22
 888:	8a 01       	movw	r16, r20
 88a:	fc 01       	movw	r30, r24
 88c:	17 82       	std	Z+7, r1	; 0x07
 88e:	16 82       	std	Z+6, r1	; 0x06
 890:	83 81       	ldd	r24, Z+3	; 0x03
 892:	81 fd       	sbrc	r24, 1
 894:	03 c0       	rjmp	.+6      	; 0x89c <vfprintf+0x24>
 896:	2f ef       	ldi	r18, 0xFF	; 255
 898:	3f ef       	ldi	r19, 0xFF	; 255
 89a:	c2 c1       	rjmp	.+900    	; 0xc20 <__stack+0x321>
 89c:	4e 01       	movw	r8, r28
 89e:	08 94       	sec
 8a0:	81 1c       	adc	r8, r1
 8a2:	91 1c       	adc	r9, r1
 8a4:	6f e3       	ldi	r22, 0x3F	; 63
 8a6:	36 2e       	mov	r3, r22
 8a8:	f6 01       	movw	r30, r12
 8aa:	93 81       	ldd	r25, Z+3	; 0x03
 8ac:	f2 01       	movw	r30, r4
 8ae:	93 fd       	sbrc	r25, 3
 8b0:	85 91       	lpm	r24, Z+
 8b2:	93 ff       	sbrs	r25, 3
 8b4:	81 91       	ld	r24, Z+
 8b6:	2f 01       	movw	r4, r30
 8b8:	88 23       	and	r24, r24
 8ba:	09 f4       	brne	.+2      	; 0x8be <vfprintf+0x46>
 8bc:	ae c1       	rjmp	.+860    	; 0xc1a <__stack+0x31b>
 8be:	85 32       	cpi	r24, 0x25	; 37
 8c0:	39 f4       	brne	.+14     	; 0x8d0 <vfprintf+0x58>
 8c2:	93 fd       	sbrc	r25, 3
 8c4:	85 91       	lpm	r24, Z+
 8c6:	93 ff       	sbrs	r25, 3
 8c8:	81 91       	ld	r24, Z+
 8ca:	2f 01       	movw	r4, r30
 8cc:	85 32       	cpi	r24, 0x25	; 37
 8ce:	29 f4       	brne	.+10     	; 0x8da <vfprintf+0x62>
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	b6 01       	movw	r22, r12
 8d4:	0e 94 2b 06 	call	0xc56	; 0xc56 <fputc>
 8d8:	e7 cf       	rjmp	.-50     	; 0x8a8 <vfprintf+0x30>
 8da:	ee 24       	eor	r14, r14
 8dc:	ff 24       	eor	r15, r15
 8de:	20 e0       	ldi	r18, 0x00	; 0
 8e0:	20 32       	cpi	r18, 0x20	; 32
 8e2:	b0 f4       	brcc	.+44     	; 0x910 <__stack+0x11>
 8e4:	8b 32       	cpi	r24, 0x2B	; 43
 8e6:	69 f0       	breq	.+26     	; 0x902 <__stack+0x3>
 8e8:	8c 32       	cpi	r24, 0x2C	; 44
 8ea:	28 f4       	brcc	.+10     	; 0x8f6 <vfprintf+0x7e>
 8ec:	80 32       	cpi	r24, 0x20	; 32
 8ee:	51 f0       	breq	.+20     	; 0x904 <__stack+0x5>
 8f0:	83 32       	cpi	r24, 0x23	; 35
 8f2:	71 f4       	brne	.+28     	; 0x910 <__stack+0x11>
 8f4:	0b c0       	rjmp	.+22     	; 0x90c <__stack+0xd>
 8f6:	8d 32       	cpi	r24, 0x2D	; 45
 8f8:	39 f0       	breq	.+14     	; 0x908 <__stack+0x9>
 8fa:	80 33       	cpi	r24, 0x30	; 48
 8fc:	49 f4       	brne	.+18     	; 0x910 <__stack+0x11>
 8fe:	21 60       	ori	r18, 0x01	; 1
 900:	2c c0       	rjmp	.+88     	; 0x95a <__stack+0x5b>
 902:	22 60       	ori	r18, 0x02	; 2
 904:	24 60       	ori	r18, 0x04	; 4
 906:	29 c0       	rjmp	.+82     	; 0x95a <__stack+0x5b>
 908:	28 60       	ori	r18, 0x08	; 8
 90a:	27 c0       	rjmp	.+78     	; 0x95a <__stack+0x5b>
 90c:	20 61       	ori	r18, 0x10	; 16
 90e:	25 c0       	rjmp	.+74     	; 0x95a <__stack+0x5b>
 910:	27 fd       	sbrc	r18, 7
 912:	2c c0       	rjmp	.+88     	; 0x96c <__stack+0x6d>
 914:	38 2f       	mov	r19, r24
 916:	30 53       	subi	r19, 0x30	; 48
 918:	3a 30       	cpi	r19, 0x0A	; 10
 91a:	98 f4       	brcc	.+38     	; 0x942 <__stack+0x43>
 91c:	26 ff       	sbrs	r18, 6
 91e:	08 c0       	rjmp	.+16     	; 0x930 <__stack+0x31>
 920:	8e 2d       	mov	r24, r14
 922:	88 0f       	add	r24, r24
 924:	e8 2e       	mov	r14, r24
 926:	ee 0c       	add	r14, r14
 928:	ee 0c       	add	r14, r14
 92a:	e8 0e       	add	r14, r24
 92c:	e3 0e       	add	r14, r19
 92e:	15 c0       	rjmp	.+42     	; 0x95a <__stack+0x5b>
 930:	8f 2d       	mov	r24, r15
 932:	88 0f       	add	r24, r24
 934:	f8 2e       	mov	r15, r24
 936:	ff 0c       	add	r15, r15
 938:	ff 0c       	add	r15, r15
 93a:	f8 0e       	add	r15, r24
 93c:	f3 0e       	add	r15, r19
 93e:	20 62       	ori	r18, 0x20	; 32
 940:	0c c0       	rjmp	.+24     	; 0x95a <__stack+0x5b>
 942:	8e 32       	cpi	r24, 0x2E	; 46
 944:	21 f4       	brne	.+8      	; 0x94e <__stack+0x4f>
 946:	26 fd       	sbrc	r18, 6
 948:	68 c1       	rjmp	.+720    	; 0xc1a <__stack+0x31b>
 94a:	20 64       	ori	r18, 0x40	; 64
 94c:	06 c0       	rjmp	.+12     	; 0x95a <__stack+0x5b>
 94e:	8c 36       	cpi	r24, 0x6C	; 108
 950:	11 f4       	brne	.+4      	; 0x956 <__stack+0x57>
 952:	20 68       	ori	r18, 0x80	; 128
 954:	02 c0       	rjmp	.+4      	; 0x95a <__stack+0x5b>
 956:	88 36       	cpi	r24, 0x68	; 104
 958:	49 f4       	brne	.+18     	; 0x96c <__stack+0x6d>
 95a:	f2 01       	movw	r30, r4
 95c:	93 fd       	sbrc	r25, 3
 95e:	85 91       	lpm	r24, Z+
 960:	93 ff       	sbrs	r25, 3
 962:	81 91       	ld	r24, Z+
 964:	2f 01       	movw	r4, r30
 966:	88 23       	and	r24, r24
 968:	09 f0       	breq	.+2      	; 0x96c <__stack+0x6d>
 96a:	ba cf       	rjmp	.-140    	; 0x8e0 <vfprintf+0x68>
 96c:	98 2f       	mov	r25, r24
 96e:	95 54       	subi	r25, 0x45	; 69
 970:	93 30       	cpi	r25, 0x03	; 3
 972:	18 f0       	brcs	.+6      	; 0x97a <__stack+0x7b>
 974:	90 52       	subi	r25, 0x20	; 32
 976:	93 30       	cpi	r25, 0x03	; 3
 978:	20 f4       	brcc	.+8      	; 0x982 <__stack+0x83>
 97a:	0c 5f       	subi	r16, 0xFC	; 252
 97c:	1f 4f       	sbci	r17, 0xFF	; 255
 97e:	39 82       	std	Y+1, r3	; 0x01
 980:	0d c0       	rjmp	.+26     	; 0x99c <__stack+0x9d>
 982:	83 36       	cpi	r24, 0x63	; 99
 984:	31 f0       	breq	.+12     	; 0x992 <__stack+0x93>
 986:	83 37       	cpi	r24, 0x73	; 115
 988:	71 f0       	breq	.+28     	; 0x9a6 <__stack+0xa7>
 98a:	83 35       	cpi	r24, 0x53	; 83
 98c:	09 f0       	breq	.+2      	; 0x990 <__stack+0x91>
 98e:	58 c0       	rjmp	.+176    	; 0xa40 <__stack+0x141>
 990:	1e c0       	rjmp	.+60     	; 0x9ce <__stack+0xcf>
 992:	f8 01       	movw	r30, r16
 994:	80 81       	ld	r24, Z
 996:	89 83       	std	Y+1, r24	; 0x01
 998:	0e 5f       	subi	r16, 0xFE	; 254
 99a:	1f 4f       	sbci	r17, 0xFF	; 255
 99c:	54 01       	movw	r10, r8
 99e:	51 e0       	ldi	r21, 0x01	; 1
 9a0:	65 2e       	mov	r6, r21
 9a2:	71 2c       	mov	r7, r1
 9a4:	12 c0       	rjmp	.+36     	; 0x9ca <__stack+0xcb>
 9a6:	f8 01       	movw	r30, r16
 9a8:	a0 80       	ld	r10, Z
 9aa:	b1 80       	ldd	r11, Z+1	; 0x01
 9ac:	26 fd       	sbrc	r18, 6
 9ae:	03 c0       	rjmp	.+6      	; 0x9b6 <__stack+0xb7>
 9b0:	6f ef       	ldi	r22, 0xFF	; 255
 9b2:	7f ef       	ldi	r23, 0xFF	; 255
 9b4:	02 c0       	rjmp	.+4      	; 0x9ba <__stack+0xbb>
 9b6:	6e 2d       	mov	r22, r14
 9b8:	70 e0       	ldi	r23, 0x00	; 0
 9ba:	0e 5f       	subi	r16, 0xFE	; 254
 9bc:	1f 4f       	sbci	r17, 0xFF	; 255
 9be:	c5 01       	movw	r24, r10
 9c0:	2c 87       	std	Y+12, r18	; 0x0c
 9c2:	0e 94 20 06 	call	0xc40	; 0xc40 <strnlen>
 9c6:	3c 01       	movw	r6, r24
 9c8:	2c 85       	ldd	r18, Y+12	; 0x0c
 9ca:	2f 77       	andi	r18, 0x7F	; 127
 9cc:	13 c0       	rjmp	.+38     	; 0x9f4 <__stack+0xf5>
 9ce:	f8 01       	movw	r30, r16
 9d0:	a0 80       	ld	r10, Z
 9d2:	b1 80       	ldd	r11, Z+1	; 0x01
 9d4:	26 fd       	sbrc	r18, 6
 9d6:	03 c0       	rjmp	.+6      	; 0x9de <__stack+0xdf>
 9d8:	6f ef       	ldi	r22, 0xFF	; 255
 9da:	7f ef       	ldi	r23, 0xFF	; 255
 9dc:	02 c0       	rjmp	.+4      	; 0x9e2 <__stack+0xe3>
 9de:	6e 2d       	mov	r22, r14
 9e0:	70 e0       	ldi	r23, 0x00	; 0
 9e2:	0e 5f       	subi	r16, 0xFE	; 254
 9e4:	1f 4f       	sbci	r17, 0xFF	; 255
 9e6:	c5 01       	movw	r24, r10
 9e8:	2c 87       	std	Y+12, r18	; 0x0c
 9ea:	0e 94 15 06 	call	0xc2a	; 0xc2a <strnlen_P>
 9ee:	3c 01       	movw	r6, r24
 9f0:	2c 85       	ldd	r18, Y+12	; 0x0c
 9f2:	20 68       	ori	r18, 0x80	; 128
 9f4:	23 ff       	sbrs	r18, 3
 9f6:	09 c0       	rjmp	.+18     	; 0xa0a <__stack+0x10b>
 9f8:	1f c0       	rjmp	.+62     	; 0xa38 <__stack+0x139>
 9fa:	80 e2       	ldi	r24, 0x20	; 32
 9fc:	90 e0       	ldi	r25, 0x00	; 0
 9fe:	b6 01       	movw	r22, r12
 a00:	2c 87       	std	Y+12, r18	; 0x0c
 a02:	0e 94 2b 06 	call	0xc56	; 0xc56 <fputc>
 a06:	fa 94       	dec	r15
 a08:	2c 85       	ldd	r18, Y+12	; 0x0c
 a0a:	8f 2d       	mov	r24, r15
 a0c:	90 e0       	ldi	r25, 0x00	; 0
 a0e:	68 16       	cp	r6, r24
 a10:	79 06       	cpc	r7, r25
 a12:	98 f3       	brcs	.-26     	; 0x9fa <__stack+0xfb>
 a14:	11 c0       	rjmp	.+34     	; 0xa38 <__stack+0x139>
 a16:	f5 01       	movw	r30, r10
 a18:	27 fd       	sbrc	r18, 7
 a1a:	85 91       	lpm	r24, Z+
 a1c:	27 ff       	sbrs	r18, 7
 a1e:	81 91       	ld	r24, Z+
 a20:	5f 01       	movw	r10, r30
 a22:	90 e0       	ldi	r25, 0x00	; 0
 a24:	b6 01       	movw	r22, r12
 a26:	2c 87       	std	Y+12, r18	; 0x0c
 a28:	0e 94 2b 06 	call	0xc56	; 0xc56 <fputc>
 a2c:	2c 85       	ldd	r18, Y+12	; 0x0c
 a2e:	f1 10       	cpse	r15, r1
 a30:	fa 94       	dec	r15
 a32:	08 94       	sec
 a34:	61 08       	sbc	r6, r1
 a36:	71 08       	sbc	r7, r1
 a38:	61 14       	cp	r6, r1
 a3a:	71 04       	cpc	r7, r1
 a3c:	61 f7       	brne	.-40     	; 0xa16 <__stack+0x117>
 a3e:	ea c0       	rjmp	.+468    	; 0xc14 <__stack+0x315>
 a40:	84 36       	cpi	r24, 0x64	; 100
 a42:	11 f0       	breq	.+4      	; 0xa48 <__stack+0x149>
 a44:	89 36       	cpi	r24, 0x69	; 105
 a46:	51 f5       	brne	.+84     	; 0xa9c <__stack+0x19d>
 a48:	27 ff       	sbrs	r18, 7
 a4a:	08 c0       	rjmp	.+16     	; 0xa5c <__stack+0x15d>
 a4c:	f8 01       	movw	r30, r16
 a4e:	60 81       	ld	r22, Z
 a50:	71 81       	ldd	r23, Z+1	; 0x01
 a52:	82 81       	ldd	r24, Z+2	; 0x02
 a54:	93 81       	ldd	r25, Z+3	; 0x03
 a56:	0c 5f       	subi	r16, 0xFC	; 252
 a58:	1f 4f       	sbci	r17, 0xFF	; 255
 a5a:	0a c0       	rjmp	.+20     	; 0xa70 <__stack+0x171>
 a5c:	f8 01       	movw	r30, r16
 a5e:	40 81       	ld	r20, Z
 a60:	51 81       	ldd	r21, Z+1	; 0x01
 a62:	ba 01       	movw	r22, r20
 a64:	88 27       	eor	r24, r24
 a66:	77 fd       	sbrc	r23, 7
 a68:	80 95       	com	r24
 a6a:	98 2f       	mov	r25, r24
 a6c:	0e 5f       	subi	r16, 0xFE	; 254
 a6e:	1f 4f       	sbci	r17, 0xFF	; 255
 a70:	4f e6       	ldi	r20, 0x6F	; 111
 a72:	b4 2e       	mov	r11, r20
 a74:	b2 22       	and	r11, r18
 a76:	97 ff       	sbrs	r25, 7
 a78:	09 c0       	rjmp	.+18     	; 0xa8c <__stack+0x18d>
 a7a:	90 95       	com	r25
 a7c:	80 95       	com	r24
 a7e:	70 95       	com	r23
 a80:	61 95       	neg	r22
 a82:	7f 4f       	sbci	r23, 0xFF	; 255
 a84:	8f 4f       	sbci	r24, 0xFF	; 255
 a86:	9f 4f       	sbci	r25, 0xFF	; 255
 a88:	f0 e8       	ldi	r31, 0x80	; 128
 a8a:	bf 2a       	or	r11, r31
 a8c:	a4 01       	movw	r20, r8
 a8e:	2a e0       	ldi	r18, 0x0A	; 10
 a90:	30 e0       	ldi	r19, 0x00	; 0
 a92:	0e 94 57 06 	call	0xcae	; 0xcae <__ultoa_invert>
 a96:	78 2e       	mov	r7, r24
 a98:	78 18       	sub	r7, r8
 a9a:	43 c0       	rjmp	.+134    	; 0xb22 <__stack+0x223>
 a9c:	85 37       	cpi	r24, 0x75	; 117
 a9e:	31 f4       	brne	.+12     	; 0xaac <__stack+0x1ad>
 aa0:	3f ee       	ldi	r19, 0xEF	; 239
 aa2:	b3 2e       	mov	r11, r19
 aa4:	b2 22       	and	r11, r18
 aa6:	2a e0       	ldi	r18, 0x0A	; 10
 aa8:	30 e0       	ldi	r19, 0x00	; 0
 aaa:	23 c0       	rjmp	.+70     	; 0xaf2 <__stack+0x1f3>
 aac:	99 ef       	ldi	r25, 0xF9	; 249
 aae:	b9 2e       	mov	r11, r25
 ab0:	b2 22       	and	r11, r18
 ab2:	8f 36       	cpi	r24, 0x6F	; 111
 ab4:	61 f0       	breq	.+24     	; 0xace <__stack+0x1cf>
 ab6:	80 37       	cpi	r24, 0x70	; 112
 ab8:	20 f4       	brcc	.+8      	; 0xac2 <__stack+0x1c3>
 aba:	88 35       	cpi	r24, 0x58	; 88
 abc:	09 f0       	breq	.+2      	; 0xac0 <__stack+0x1c1>
 abe:	ad c0       	rjmp	.+346    	; 0xc1a <__stack+0x31b>
 ac0:	12 c0       	rjmp	.+36     	; 0xae6 <__stack+0x1e7>
 ac2:	80 37       	cpi	r24, 0x70	; 112
 ac4:	39 f0       	breq	.+14     	; 0xad4 <__stack+0x1d5>
 ac6:	88 37       	cpi	r24, 0x78	; 120
 ac8:	09 f0       	breq	.+2      	; 0xacc <__stack+0x1cd>
 aca:	a7 c0       	rjmp	.+334    	; 0xc1a <__stack+0x31b>
 acc:	05 c0       	rjmp	.+10     	; 0xad8 <__stack+0x1d9>
 ace:	28 e0       	ldi	r18, 0x08	; 8
 ad0:	30 e0       	ldi	r19, 0x00	; 0
 ad2:	0f c0       	rjmp	.+30     	; 0xaf2 <__stack+0x1f3>
 ad4:	20 e1       	ldi	r18, 0x10	; 16
 ad6:	b2 2a       	or	r11, r18
 ad8:	b4 fe       	sbrs	r11, 4
 ada:	02 c0       	rjmp	.+4      	; 0xae0 <__stack+0x1e1>
 adc:	84 e0       	ldi	r24, 0x04	; 4
 ade:	b8 2a       	or	r11, r24
 ae0:	20 e1       	ldi	r18, 0x10	; 16
 ae2:	30 e0       	ldi	r19, 0x00	; 0
 ae4:	06 c0       	rjmp	.+12     	; 0xaf2 <__stack+0x1f3>
 ae6:	b4 fe       	sbrs	r11, 4
 ae8:	02 c0       	rjmp	.+4      	; 0xaee <__stack+0x1ef>
 aea:	e6 e0       	ldi	r30, 0x06	; 6
 aec:	be 2a       	or	r11, r30
 aee:	20 e1       	ldi	r18, 0x10	; 16
 af0:	32 e0       	ldi	r19, 0x02	; 2
 af2:	b7 fe       	sbrs	r11, 7
 af4:	08 c0       	rjmp	.+16     	; 0xb06 <__stack+0x207>
 af6:	f8 01       	movw	r30, r16
 af8:	60 81       	ld	r22, Z
 afa:	71 81       	ldd	r23, Z+1	; 0x01
 afc:	82 81       	ldd	r24, Z+2	; 0x02
 afe:	93 81       	ldd	r25, Z+3	; 0x03
 b00:	0c 5f       	subi	r16, 0xFC	; 252
 b02:	1f 4f       	sbci	r17, 0xFF	; 255
 b04:	07 c0       	rjmp	.+14     	; 0xb14 <__stack+0x215>
 b06:	f8 01       	movw	r30, r16
 b08:	60 81       	ld	r22, Z
 b0a:	71 81       	ldd	r23, Z+1	; 0x01
 b0c:	80 e0       	ldi	r24, 0x00	; 0
 b0e:	90 e0       	ldi	r25, 0x00	; 0
 b10:	0e 5f       	subi	r16, 0xFE	; 254
 b12:	1f 4f       	sbci	r17, 0xFF	; 255
 b14:	a4 01       	movw	r20, r8
 b16:	0e 94 57 06 	call	0xcae	; 0xcae <__ultoa_invert>
 b1a:	78 2e       	mov	r7, r24
 b1c:	78 18       	sub	r7, r8
 b1e:	ff e7       	ldi	r31, 0x7F	; 127
 b20:	bf 22       	and	r11, r31
 b22:	b6 fe       	sbrs	r11, 6
 b24:	0b c0       	rjmp	.+22     	; 0xb3c <__stack+0x23d>
 b26:	2e ef       	ldi	r18, 0xFE	; 254
 b28:	b2 22       	and	r11, r18
 b2a:	7e 14       	cp	r7, r14
 b2c:	38 f4       	brcc	.+14     	; 0xb3c <__stack+0x23d>
 b2e:	b4 fe       	sbrs	r11, 4
 b30:	07 c0       	rjmp	.+14     	; 0xb40 <__stack+0x241>
 b32:	b2 fc       	sbrc	r11, 2
 b34:	05 c0       	rjmp	.+10     	; 0xb40 <__stack+0x241>
 b36:	8f ee       	ldi	r24, 0xEF	; 239
 b38:	b8 22       	and	r11, r24
 b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__stack+0x241>
 b3c:	a7 2c       	mov	r10, r7
 b3e:	01 c0       	rjmp	.+2      	; 0xb42 <__stack+0x243>
 b40:	ae 2c       	mov	r10, r14
 b42:	8b 2d       	mov	r24, r11
 b44:	b4 fe       	sbrs	r11, 4
 b46:	0d c0       	rjmp	.+26     	; 0xb62 <__stack+0x263>
 b48:	fe 01       	movw	r30, r28
 b4a:	e7 0d       	add	r30, r7
 b4c:	f1 1d       	adc	r31, r1
 b4e:	90 81       	ld	r25, Z
 b50:	90 33       	cpi	r25, 0x30	; 48
 b52:	19 f4       	brne	.+6      	; 0xb5a <__stack+0x25b>
 b54:	e9 ee       	ldi	r30, 0xE9	; 233
 b56:	be 22       	and	r11, r30
 b58:	07 c0       	rjmp	.+14     	; 0xb68 <__stack+0x269>
 b5a:	a3 94       	inc	r10
 b5c:	b2 fe       	sbrs	r11, 2
 b5e:	04 c0       	rjmp	.+8      	; 0xb68 <__stack+0x269>
 b60:	02 c0       	rjmp	.+4      	; 0xb66 <__stack+0x267>
 b62:	86 78       	andi	r24, 0x86	; 134
 b64:	09 f0       	breq	.+2      	; 0xb68 <__stack+0x269>
 b66:	a3 94       	inc	r10
 b68:	6b 2c       	mov	r6, r11
 b6a:	b3 fc       	sbrc	r11, 3
 b6c:	14 c0       	rjmp	.+40     	; 0xb96 <__stack+0x297>
 b6e:	b0 fe       	sbrs	r11, 0
 b70:	0f c0       	rjmp	.+30     	; 0xb90 <__stack+0x291>
 b72:	af 14       	cp	r10, r15
 b74:	10 f0       	brcs	.+4      	; 0xb7a <__stack+0x27b>
 b76:	e7 2c       	mov	r14, r7
 b78:	0b c0       	rjmp	.+22     	; 0xb90 <__stack+0x291>
 b7a:	e7 2c       	mov	r14, r7
 b7c:	ef 0c       	add	r14, r15
 b7e:	ea 18       	sub	r14, r10
 b80:	af 2c       	mov	r10, r15
 b82:	06 c0       	rjmp	.+12     	; 0xb90 <__stack+0x291>
 b84:	80 e2       	ldi	r24, 0x20	; 32
 b86:	90 e0       	ldi	r25, 0x00	; 0
 b88:	b6 01       	movw	r22, r12
 b8a:	0e 94 2b 06 	call	0xc56	; 0xc56 <fputc>
 b8e:	a3 94       	inc	r10
 b90:	af 14       	cp	r10, r15
 b92:	c0 f3       	brcs	.-16     	; 0xb84 <__stack+0x285>
 b94:	04 c0       	rjmp	.+8      	; 0xb9e <__stack+0x29f>
 b96:	af 14       	cp	r10, r15
 b98:	10 f4       	brcc	.+4      	; 0xb9e <__stack+0x29f>
 b9a:	fa 18       	sub	r15, r10
 b9c:	01 c0       	rjmp	.+2      	; 0xba0 <__stack+0x2a1>
 b9e:	ff 24       	eor	r15, r15
 ba0:	64 fe       	sbrs	r6, 4
 ba2:	0f c0       	rjmp	.+30     	; 0xbc2 <__stack+0x2c3>
 ba4:	80 e3       	ldi	r24, 0x30	; 48
 ba6:	90 e0       	ldi	r25, 0x00	; 0
 ba8:	b6 01       	movw	r22, r12
 baa:	0e 94 2b 06 	call	0xc56	; 0xc56 <fputc>
 bae:	62 fe       	sbrs	r6, 2
 bb0:	1d c0       	rjmp	.+58     	; 0xbec <__stack+0x2ed>
 bb2:	61 fc       	sbrc	r6, 1
 bb4:	03 c0       	rjmp	.+6      	; 0xbbc <__stack+0x2bd>
 bb6:	88 e7       	ldi	r24, 0x78	; 120
 bb8:	90 e0       	ldi	r25, 0x00	; 0
 bba:	0e c0       	rjmp	.+28     	; 0xbd8 <__stack+0x2d9>
 bbc:	88 e5       	ldi	r24, 0x58	; 88
 bbe:	90 e0       	ldi	r25, 0x00	; 0
 bc0:	0b c0       	rjmp	.+22     	; 0xbd8 <__stack+0x2d9>
 bc2:	86 2d       	mov	r24, r6
 bc4:	86 78       	andi	r24, 0x86	; 134
 bc6:	91 f0       	breq	.+36     	; 0xbec <__stack+0x2ed>
 bc8:	61 fe       	sbrs	r6, 1
 bca:	02 c0       	rjmp	.+4      	; 0xbd0 <__stack+0x2d1>
 bcc:	8b e2       	ldi	r24, 0x2B	; 43
 bce:	01 c0       	rjmp	.+2      	; 0xbd2 <__stack+0x2d3>
 bd0:	80 e2       	ldi	r24, 0x20	; 32
 bd2:	b7 fc       	sbrc	r11, 7
 bd4:	8d e2       	ldi	r24, 0x2D	; 45
 bd6:	90 e0       	ldi	r25, 0x00	; 0
 bd8:	b6 01       	movw	r22, r12
 bda:	0e 94 2b 06 	call	0xc56	; 0xc56 <fputc>
 bde:	06 c0       	rjmp	.+12     	; 0xbec <__stack+0x2ed>
 be0:	80 e3       	ldi	r24, 0x30	; 48
 be2:	90 e0       	ldi	r25, 0x00	; 0
 be4:	b6 01       	movw	r22, r12
 be6:	0e 94 2b 06 	call	0xc56	; 0xc56 <fputc>
 bea:	ea 94       	dec	r14
 bec:	7e 14       	cp	r7, r14
 bee:	c0 f3       	brcs	.-16     	; 0xbe0 <__stack+0x2e1>
 bf0:	7a 94       	dec	r7
 bf2:	f4 01       	movw	r30, r8
 bf4:	e7 0d       	add	r30, r7
 bf6:	f1 1d       	adc	r31, r1
 bf8:	80 81       	ld	r24, Z
 bfa:	90 e0       	ldi	r25, 0x00	; 0
 bfc:	b6 01       	movw	r22, r12
 bfe:	0e 94 2b 06 	call	0xc56	; 0xc56 <fputc>
 c02:	77 20       	and	r7, r7
 c04:	a9 f7       	brne	.-22     	; 0xbf0 <__stack+0x2f1>
 c06:	06 c0       	rjmp	.+12     	; 0xc14 <__stack+0x315>
 c08:	80 e2       	ldi	r24, 0x20	; 32
 c0a:	90 e0       	ldi	r25, 0x00	; 0
 c0c:	b6 01       	movw	r22, r12
 c0e:	0e 94 2b 06 	call	0xc56	; 0xc56 <fputc>
 c12:	fa 94       	dec	r15
 c14:	ff 20       	and	r15, r15
 c16:	c1 f7       	brne	.-16     	; 0xc08 <__stack+0x309>
 c18:	47 ce       	rjmp	.-882    	; 0x8a8 <vfprintf+0x30>
 c1a:	f6 01       	movw	r30, r12
 c1c:	26 81       	ldd	r18, Z+6	; 0x06
 c1e:	37 81       	ldd	r19, Z+7	; 0x07
 c20:	c9 01       	movw	r24, r18
 c22:	2c 96       	adiw	r28, 0x0c	; 12
 c24:	e1 e1       	ldi	r30, 0x11	; 17
 c26:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__epilogue_restores__+0x2>

00000c2a <strnlen_P>:
 c2a:	fc 01       	movw	r30, r24
 c2c:	05 90       	lpm	r0, Z+
 c2e:	61 50       	subi	r22, 0x01	; 1
 c30:	70 40       	sbci	r23, 0x00	; 0
 c32:	01 10       	cpse	r0, r1
 c34:	d8 f7       	brcc	.-10     	; 0xc2c <strnlen_P+0x2>
 c36:	80 95       	com	r24
 c38:	90 95       	com	r25
 c3a:	8e 0f       	add	r24, r30
 c3c:	9f 1f       	adc	r25, r31
 c3e:	08 95       	ret

00000c40 <strnlen>:
 c40:	fc 01       	movw	r30, r24
 c42:	61 50       	subi	r22, 0x01	; 1
 c44:	70 40       	sbci	r23, 0x00	; 0
 c46:	01 90       	ld	r0, Z+
 c48:	01 10       	cpse	r0, r1
 c4a:	d8 f7       	brcc	.-10     	; 0xc42 <strnlen+0x2>
 c4c:	80 95       	com	r24
 c4e:	90 95       	com	r25
 c50:	8e 0f       	add	r24, r30
 c52:	9f 1f       	adc	r25, r31
 c54:	08 95       	ret

00000c56 <fputc>:
 c56:	0f 93       	push	r16
 c58:	1f 93       	push	r17
 c5a:	cf 93       	push	r28
 c5c:	df 93       	push	r29
 c5e:	8c 01       	movw	r16, r24
 c60:	eb 01       	movw	r28, r22
 c62:	8b 81       	ldd	r24, Y+3	; 0x03
 c64:	81 ff       	sbrs	r24, 1
 c66:	1b c0       	rjmp	.+54     	; 0xc9e <fputc+0x48>
 c68:	82 ff       	sbrs	r24, 2
 c6a:	0d c0       	rjmp	.+26     	; 0xc86 <fputc+0x30>
 c6c:	2e 81       	ldd	r18, Y+6	; 0x06
 c6e:	3f 81       	ldd	r19, Y+7	; 0x07
 c70:	8c 81       	ldd	r24, Y+4	; 0x04
 c72:	9d 81       	ldd	r25, Y+5	; 0x05
 c74:	28 17       	cp	r18, r24
 c76:	39 07       	cpc	r19, r25
 c78:	64 f4       	brge	.+24     	; 0xc92 <fputc+0x3c>
 c7a:	e8 81       	ld	r30, Y
 c7c:	f9 81       	ldd	r31, Y+1	; 0x01
 c7e:	01 93       	st	Z+, r16
 c80:	f9 83       	std	Y+1, r31	; 0x01
 c82:	e8 83       	st	Y, r30
 c84:	06 c0       	rjmp	.+12     	; 0xc92 <fputc+0x3c>
 c86:	e8 85       	ldd	r30, Y+8	; 0x08
 c88:	f9 85       	ldd	r31, Y+9	; 0x09
 c8a:	80 2f       	mov	r24, r16
 c8c:	09 95       	icall
 c8e:	00 97       	sbiw	r24, 0x00	; 0
 c90:	31 f4       	brne	.+12     	; 0xc9e <fputc+0x48>
 c92:	8e 81       	ldd	r24, Y+6	; 0x06
 c94:	9f 81       	ldd	r25, Y+7	; 0x07
 c96:	01 96       	adiw	r24, 0x01	; 1
 c98:	9f 83       	std	Y+7, r25	; 0x07
 c9a:	8e 83       	std	Y+6, r24	; 0x06
 c9c:	02 c0       	rjmp	.+4      	; 0xca2 <fputc+0x4c>
 c9e:	0f ef       	ldi	r16, 0xFF	; 255
 ca0:	1f ef       	ldi	r17, 0xFF	; 255
 ca2:	c8 01       	movw	r24, r16
 ca4:	df 91       	pop	r29
 ca6:	cf 91       	pop	r28
 ca8:	1f 91       	pop	r17
 caa:	0f 91       	pop	r16
 cac:	08 95       	ret

00000cae <__ultoa_invert>:
 cae:	fa 01       	movw	r30, r20
 cb0:	aa 27       	eor	r26, r26
 cb2:	28 30       	cpi	r18, 0x08	; 8
 cb4:	51 f1       	breq	.+84     	; 0xd0a <__ultoa_invert+0x5c>
 cb6:	20 31       	cpi	r18, 0x10	; 16
 cb8:	81 f1       	breq	.+96     	; 0xd1a <__ultoa_invert+0x6c>
 cba:	e8 94       	clt
 cbc:	6f 93       	push	r22
 cbe:	6e 7f       	andi	r22, 0xFE	; 254
 cc0:	6e 5f       	subi	r22, 0xFE	; 254
 cc2:	7f 4f       	sbci	r23, 0xFF	; 255
 cc4:	8f 4f       	sbci	r24, 0xFF	; 255
 cc6:	9f 4f       	sbci	r25, 0xFF	; 255
 cc8:	af 4f       	sbci	r26, 0xFF	; 255
 cca:	b1 e0       	ldi	r27, 0x01	; 1
 ccc:	3e d0       	rcall	.+124    	; 0xd4a <__ultoa_invert+0x9c>
 cce:	b4 e0       	ldi	r27, 0x04	; 4
 cd0:	3c d0       	rcall	.+120    	; 0xd4a <__ultoa_invert+0x9c>
 cd2:	67 0f       	add	r22, r23
 cd4:	78 1f       	adc	r23, r24
 cd6:	89 1f       	adc	r24, r25
 cd8:	9a 1f       	adc	r25, r26
 cda:	a1 1d       	adc	r26, r1
 cdc:	68 0f       	add	r22, r24
 cde:	79 1f       	adc	r23, r25
 ce0:	8a 1f       	adc	r24, r26
 ce2:	91 1d       	adc	r25, r1
 ce4:	a1 1d       	adc	r26, r1
 ce6:	6a 0f       	add	r22, r26
 ce8:	71 1d       	adc	r23, r1
 cea:	81 1d       	adc	r24, r1
 cec:	91 1d       	adc	r25, r1
 cee:	a1 1d       	adc	r26, r1
 cf0:	20 d0       	rcall	.+64     	; 0xd32 <__ultoa_invert+0x84>
 cf2:	09 f4       	brne	.+2      	; 0xcf6 <__ultoa_invert+0x48>
 cf4:	68 94       	set
 cf6:	3f 91       	pop	r19
 cf8:	2a e0       	ldi	r18, 0x0A	; 10
 cfa:	26 9f       	mul	r18, r22
 cfc:	11 24       	eor	r1, r1
 cfe:	30 19       	sub	r19, r0
 d00:	30 5d       	subi	r19, 0xD0	; 208
 d02:	31 93       	st	Z+, r19
 d04:	de f6       	brtc	.-74     	; 0xcbc <__ultoa_invert+0xe>
 d06:	cf 01       	movw	r24, r30
 d08:	08 95       	ret
 d0a:	46 2f       	mov	r20, r22
 d0c:	47 70       	andi	r20, 0x07	; 7
 d0e:	40 5d       	subi	r20, 0xD0	; 208
 d10:	41 93       	st	Z+, r20
 d12:	b3 e0       	ldi	r27, 0x03	; 3
 d14:	0f d0       	rcall	.+30     	; 0xd34 <__ultoa_invert+0x86>
 d16:	c9 f7       	brne	.-14     	; 0xd0a <__ultoa_invert+0x5c>
 d18:	f6 cf       	rjmp	.-20     	; 0xd06 <__ultoa_invert+0x58>
 d1a:	46 2f       	mov	r20, r22
 d1c:	4f 70       	andi	r20, 0x0F	; 15
 d1e:	40 5d       	subi	r20, 0xD0	; 208
 d20:	4a 33       	cpi	r20, 0x3A	; 58
 d22:	18 f0       	brcs	.+6      	; 0xd2a <__ultoa_invert+0x7c>
 d24:	49 5d       	subi	r20, 0xD9	; 217
 d26:	31 fd       	sbrc	r19, 1
 d28:	40 52       	subi	r20, 0x20	; 32
 d2a:	41 93       	st	Z+, r20
 d2c:	02 d0       	rcall	.+4      	; 0xd32 <__ultoa_invert+0x84>
 d2e:	a9 f7       	brne	.-22     	; 0xd1a <__ultoa_invert+0x6c>
 d30:	ea cf       	rjmp	.-44     	; 0xd06 <__ultoa_invert+0x58>
 d32:	b4 e0       	ldi	r27, 0x04	; 4
 d34:	a6 95       	lsr	r26
 d36:	97 95       	ror	r25
 d38:	87 95       	ror	r24
 d3a:	77 95       	ror	r23
 d3c:	67 95       	ror	r22
 d3e:	ba 95       	dec	r27
 d40:	c9 f7       	brne	.-14     	; 0xd34 <__ultoa_invert+0x86>
 d42:	00 97       	sbiw	r24, 0x00	; 0
 d44:	61 05       	cpc	r22, r1
 d46:	71 05       	cpc	r23, r1
 d48:	08 95       	ret
 d4a:	9b 01       	movw	r18, r22
 d4c:	ac 01       	movw	r20, r24
 d4e:	0a 2e       	mov	r0, r26
 d50:	06 94       	lsr	r0
 d52:	57 95       	ror	r21
 d54:	47 95       	ror	r20
 d56:	37 95       	ror	r19
 d58:	27 95       	ror	r18
 d5a:	ba 95       	dec	r27
 d5c:	c9 f7       	brne	.-14     	; 0xd50 <__ultoa_invert+0xa2>
 d5e:	62 0f       	add	r22, r18
 d60:	73 1f       	adc	r23, r19
 d62:	84 1f       	adc	r24, r20
 d64:	95 1f       	adc	r25, r21
 d66:	a0 1d       	adc	r26, r0
 d68:	08 95       	ret

00000d6a <__prologue_saves__>:
 d6a:	2f 92       	push	r2
 d6c:	3f 92       	push	r3
 d6e:	4f 92       	push	r4
 d70:	5f 92       	push	r5
 d72:	6f 92       	push	r6
 d74:	7f 92       	push	r7
 d76:	8f 92       	push	r8
 d78:	9f 92       	push	r9
 d7a:	af 92       	push	r10
 d7c:	bf 92       	push	r11
 d7e:	cf 92       	push	r12
 d80:	df 92       	push	r13
 d82:	ef 92       	push	r14
 d84:	ff 92       	push	r15
 d86:	0f 93       	push	r16
 d88:	1f 93       	push	r17
 d8a:	cf 93       	push	r28
 d8c:	df 93       	push	r29
 d8e:	cd b7       	in	r28, 0x3d	; 61
 d90:	de b7       	in	r29, 0x3e	; 62
 d92:	ca 1b       	sub	r28, r26
 d94:	db 0b       	sbc	r29, r27
 d96:	0f b6       	in	r0, 0x3f	; 63
 d98:	f8 94       	cli
 d9a:	de bf       	out	0x3e, r29	; 62
 d9c:	0f be       	out	0x3f, r0	; 63
 d9e:	cd bf       	out	0x3d, r28	; 61
 da0:	09 94       	ijmp

00000da2 <__epilogue_restores__>:
 da2:	2a 88       	ldd	r2, Y+18	; 0x12
 da4:	39 88       	ldd	r3, Y+17	; 0x11
 da6:	48 88       	ldd	r4, Y+16	; 0x10
 da8:	5f 84       	ldd	r5, Y+15	; 0x0f
 daa:	6e 84       	ldd	r6, Y+14	; 0x0e
 dac:	7d 84       	ldd	r7, Y+13	; 0x0d
 dae:	8c 84       	ldd	r8, Y+12	; 0x0c
 db0:	9b 84       	ldd	r9, Y+11	; 0x0b
 db2:	aa 84       	ldd	r10, Y+10	; 0x0a
 db4:	b9 84       	ldd	r11, Y+9	; 0x09
 db6:	c8 84       	ldd	r12, Y+8	; 0x08
 db8:	df 80       	ldd	r13, Y+7	; 0x07
 dba:	ee 80       	ldd	r14, Y+6	; 0x06
 dbc:	fd 80       	ldd	r15, Y+5	; 0x05
 dbe:	0c 81       	ldd	r16, Y+4	; 0x04
 dc0:	1b 81       	ldd	r17, Y+3	; 0x03
 dc2:	aa 81       	ldd	r26, Y+2	; 0x02
 dc4:	b9 81       	ldd	r27, Y+1	; 0x01
 dc6:	ce 0f       	add	r28, r30
 dc8:	d1 1d       	adc	r29, r1
 dca:	0f b6       	in	r0, 0x3f	; 63
 dcc:	f8 94       	cli
 dce:	de bf       	out	0x3e, r29	; 62
 dd0:	0f be       	out	0x3f, r0	; 63
 dd2:	cd bf       	out	0x3d, r28	; 61
 dd4:	ed 01       	movw	r28, r26
 dd6:	08 95       	ret

00000dd8 <__do_global_dtors>:
 dd8:	10 e0       	ldi	r17, 0x00	; 0
 dda:	ca e6       	ldi	r28, 0x6A	; 106
 ddc:	d0 e0       	ldi	r29, 0x00	; 0
 dde:	04 c0       	rjmp	.+8      	; 0xde8 <__do_global_dtors+0x10>
 de0:	fe 01       	movw	r30, r28
 de2:	0e 94 b0 02 	call	0x560	; 0x560 <__tablejump__>
 de6:	22 96       	adiw	r28, 0x02	; 2
 de8:	cc 36       	cpi	r28, 0x6C	; 108
 dea:	d1 07       	cpc	r29, r17
 dec:	c9 f7       	brne	.-14     	; 0xde0 <__do_global_dtors+0x8>
 dee:	f8 94       	cli

00000df0 <__stop_program>:
 df0:	ff cf       	rjmp	.-2      	; 0xdf0 <__stop_program>
